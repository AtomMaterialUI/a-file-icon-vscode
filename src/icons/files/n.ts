import { IconPack } from 'src/@types/config';

export const nFiles = [
  {
    fileExtensions: ['n64'],
    name: 'n64',
  },
  {
    fileExtensions: ['build'],
    name: 'nant',
  },
  {
    fileExtensions: ['nano', 'nanorc'],
    name: 'nano',
  },
  {
    fileExtensions: ['nasm'],
    name: 'nasm',
  },
  {
    fileExtensions: [
      'ncurc',
      'ncurc.cjs',
      'ncurc.js',
      'ncurc.json',
      'ncurc.mjs',
      'ncurc.ts',
      'ncurc.yaml',
      'ncurc.yml',
    ],
    name: 'ncu',
  },
  {
    fileExtensions: ['ndproj'],
    name: 'ndepend',
  },
  {
    fileExtensions: ['ne'],
    name: 'nearley',
  },
  {
    fileExtensions: ['n', 'neko'],
    name: 'neko',
  },
  {
    fileExtensions: ['cyp', 'cypher'],
    name: 'neo4j',
  },
  {
    fileExtensions: ['neon'],
    light: true,
    name: 'neon',
  },
  {
    fileExtensions: ['nasl'],
    name: 'nessus',
  },
  {
    fileNames: ['egg.json', 'egg.yaml', 'egg.yml'],
    name: 'nestland',
  },
  {
    fileExtensions: ['nest-cli.json'],
    fileNames: ['nest-cli.json'],
    name: 'nest',
  },
  {
    fileExtensions: ['nestconfig.json'],
    fileNames: ['nestconfig.json'],
    name: 'nestconfig',
  },
  {
    enabledFor: [IconPack.Nest],
    fileExtensions: ['adapter.ts', 'adapter.js', 'adapters.ts', 'adapters.js'],
    name: 'nestadapter',
  },
  {
    enabledFor: [IconPack.Nest],
    fileExtensions: ['args.ts', 'args.js', 'arguments.ts', 'arguments.js'],
    name: 'nestargs',
  },
  {
    enabledFor: [IconPack.Nest],
    fileExtensions: ['constant.ts', 'constant.js', 'constants.ts', 'constants.js'],
    light: true,
    name: 'nestconstants',
  },
  {
    enabledFor: [IconPack.Nest],
    fileExtensions: ['controller.ts', 'controller.js', 'controllers.ts', 'controllers.js'],
    name: 'nestcontroller',
  },
  {
    enabledFor: [IconPack.Nest],
    fileExtensions: ['decorator.ts', 'decorator.js', 'decorators.ts', 'decorators.js'],
    name: 'nestdecorator',
  },
  {
    enabledFor: [IconPack.Nest],
    fileExtensions: ['dto.ts', 'dto.js'],
    name: 'nestdto',
  },
  {
    enabledFor: [IconPack.Nest],
    fileExtensions: ['e2e.ts', 'e2e.js', 'e2e-spec.js', 'e2e-spec.ts'],
    name: 'neste2e',
  },
  {
    enabledFor: [IconPack.Nest],
    fileExtensions: ['entity.ts', 'entity.js', 'entities.js', 'entities.ts'],
    name: 'nestentity',
  },
  {
    enabledFor: [IconPack.Nest],
    fileExtensions: ['filter.ts', 'filter.js', 'filters.ts', 'filters.js'],
    name: 'nestfilter',
  },
  {
    enabledFor: [IconPack.Nest],
    fileExtensions: ['gateway.ts', 'gateway.js', 'gateways.ts', 'gateways.js'],
    name: 'nestgateway',
  },
  {
    enabledFor: [IconPack.Nest],
    fileExtensions: ['gql.ts', 'gql.js', 'graphql.ts', 'graphql.js'],
    name: 'nestgql',
  },
  {
    enabledFor: [IconPack.Nest],
    fileExtensions: ['guard.ts', 'guard.js', 'guards.ts', 'guards.js'],
    name: 'nestguard',
  },
  {
    enabledFor: [IconPack.Nest],
    fileExtensions: ['input.ts', 'input.js', 'inputs.ts', 'inputs.js'],
    name: 'nestinput',
  },
  {
    enabledFor: [IconPack.Nest],
    fileExtensions: ['interceptor.ts', 'interceptor.js', 'interceptors.ts', 'interceptors.js'],
    name: 'nestinterceptor',
  },
  {
    enabledFor: [IconPack.Nest],
    fileExtensions: [
      'loader.ts',
      'loader.js',
      'loaders.ts',
      'loaders.js',
      'dataloader.ts',
      'dataloader.js',
      'dataloaders.ts',
      'dataloaders.js',
    ],
    name: 'nestloader',
  },
  {
    enabledFor: [IconPack.Nest],
    fileExtensions: ['middleware.ts', 'middleware.js', 'middlewares.ts', 'middlewares.js'],
    name: 'nestmiddleware',
  },
  {
    enabledFor: [IconPack.Nest],
    fileExtensions: ['model.ts', 'model.js', 'models.ts', 'models.js'],
    name: 'nestmodel',
  },
  {
    enabledFor: [IconPack.Nest],
    fileExtensions: ['module.ts', 'module.js'],
    name: 'nestmodule',
  },
  {
    enabledFor: [IconPack.Nest],
    fileExtensions: ['pipe.ts', 'pipe.js', 'pipes.ts', 'pipes.js'],
    name: 'nestpipe',
  },
  {
    enabledFor: [IconPack.Nest],
    fileExtensions: ['processor.ts', 'processor.js', 'processors.ts', 'processors.js'],
    name: 'nestprocessor',
  },
  {
    enabledFor: [IconPack.Nest],
    fileExtensions: ['provider.ts', 'provider.js', 'providers.ts', 'providers.js'],
    name: 'nestprovider',
  },
  {
    enabledFor: [IconPack.Nest],
    fileExtensions: ['scalar.ts', 'scalar.js', 'scalars.ts', 'scalars.js'],
    name: 'nestscalar',
  },
  {
    enabledFor: [IconPack.Nest],
    fileExtensions: ['schema.ts', 'schema.js', 'schemas.ts', 'schemas.js'],
    name: 'nestschema',
  },
  {
    enabledFor: [IconPack.Nest],
    fileExtensions: ['repository.ts', 'repository.js', 'repositories.ts', 'repositories.js'],
    name: 'nestrepository',
  },
  {
    enabledFor: [IconPack.Nest],
    fileExtensions: ['resolver.ts', 'resolver.js', 'resolvers.ts', 'resolvers.js'],
    name: 'nestresolver',
  },
  {
    enabledFor: [IconPack.Nest],
    fileExtensions: ['service.ts', 'service.js', 'services.ts', 'services.js'],
    name: 'nestservice',
  },
  {
    enabledFor: [IconPack.Nest],
    fileExtensions: ['strategy.ts', 'strategy.js', 'strategies.ts', 'strategies.js'],
    name: 'neststrategy',
  },
  {
    enabledFor: [IconPack.Nest],
    fileExtensions: ['subscriber.ts', 'subscriber.js', 'subscribers.ts', 'subscribers.js'],
    name: 'nestsubscriber',
  },
  {
    fileNames: ['netlify.toml'],
    name: 'netlify',
  },
  {
    fileNames: ['_headers'],
    name: 'netlify_headers',
  },
  {
    fileNames: ['_redirects'],
    name: 'netlify_redirects',
  },
  {
    fileExtensions: ['axi', 'axs', 'axb'],
    name: 'netlinx',
  },
  {
    fileExtensions: ['nlogo', 'nls'],
    name: 'netlogo',
  },
  {
    fileNames: ['newrelic.yml', 'newrelic.yaml'],
    name: 'newrelic',
  },
  {
    fileExtensions: ['nextflow', 'nf'],
    name: 'nextflow',
  },
  {
    fileNames: ['nextflow.config.cjs', 'nextflow.config.js', 'nextflow.config.ts', 'nextflow.config.mjs'],
    name: 'nextflowconfig',
  },
  {
    fileNames: ['next.config.cjs', 'next.config.js', 'next.config.mjs', 'next.config.ts'],
    name: 'nextjs',
  },
  {
    enabledFor: [IconPack.Ngrx],
    fileExtensions: [
      'action.js',
      'action.jsx',
      'action.ts',
      'action.tsx',
      'actions.js',
      'actions.jsx',
      'actions.ts',
      'actions.tsx',
    ],
    fileNames: [
      'action.js',
      'action.jsx',
      'action.ts',
      'action.tsx',
      'actions.js',
      'actions.jsx',
      'actions.ts',
      'actions.tsx',
    ],
    name: 'ngrx-actions',
  },
  {
    enabledFor: [IconPack.Ngrx],
    fileExtensions: [
      'actions/cjs',
      'actions/js',
      'actions/jsx',
      'actions/mjs',
      'actions/ts',
      'actions/tsx',
    ],
    name: 'ngrx-actions-files',
  },
  {
    enabledFor: [IconPack.Ngrx],
    fileExtensions: [
      'effect.js',
      'effect.jsx',
      'effect.ts',
      'effect.tsx',
      'effects.js',
      'effects.jsx',
      'effects.ts',
      'effects.tsx',
    ],
    fileNames: [
      'effect.js',
      'effect.jsx',
      'effect.ts',
      'effect.tsx',
      'effects.js',
      'effects.jsx',
      'effects.ts',
      'effects.tsx',
    ],
    name: 'ngrx-effects',
  },
  {
    enabledFor: [IconPack.Ngrx],
    fileExtensions: [
      'effects/cjs',
      'effects/js',
      'effects/jsx',
      'effects/mjs',
      'effects/ts',
      'effects/tsx',
    ],
    name: 'ngrx-effects-files',
  },
  {
    enabledFor: [IconPack.Ngrx],
    fileExtensions: [
      'entities.js',
      'entities.jsx',
      'entities.ts',
      'entities.tsx',

      'entity.js',
      'entity.jsx',
      'entity.ts',
      'entity.tsx',
    ],
    fileNames: [
      'entities.js',
      'entities.jsx',
      'entities.ts',
      'entities.tsx',

      'entity.js',
      'entity.jsx',
      'entity.ts',
      'entity.tsx',
    ],
    name: 'ngrx-entities',
  },
  {
    enabledFor: [IconPack.Ngrx],
    fileExtensions: [
      'entities/cjs',
      'entities/js',
      'entities/jsx',
      'entities/mjs',
      'entities/ts',
      'entities/tsx',

      'entity/cjs',
      'entity/js',
      'entity/jsx',
      'entity/mjs',
      'entity/ts',
      'entity/tsx',
    ],
    name: 'ngrx-entities-files',
  },
  {
    enabledFor: [IconPack.Ngrx],
    fileExtensions: [
      'reducer.js',
      'reducer.jsx',
      'reducer.ts',
      'reducer.tsx',
      'reducers.js',
      'reducers.jsx',
      'reducers.ts',
      'reducers.tsx',
    ],
    fileNames: [
      'reducer.js',
      'reducer.jsx',
      'reducer.ts',
      'reducer.tsx',
      'reducers.js',
      'reducers.jsx',
      'reducers.ts',
      'reducers.tsx',
    ],
    name: 'ngrx-reducers',
  },
  {
    enabledFor: [IconPack.Ngrx],
    fileExtensions: [
      'reducers/cjs',
      'reducers/js',
      'reducers/jsx',
      'reducers/mjs',
      'reducers/ts',
      'reducers/tsx',
    ],
    name: 'ngrx-reducers-files',
  },
  {
    enabledFor: [IconPack.Ngrx],
    fileExtensions: [
      'repo.js',
      'repo.jsx',
      'repo.ts',
      'repo.tsx',
      'repos.js',
      'repos.jsx',
      'repos.ts',
      'repos.tsx',

      'repositories.js',
      'repositories.jsx',
      'repositories.ts',
      'repositories.tsx',

      'repository.js',
      'repository.jsx',
      'repository.ts',
      'repository.tsx',
    ],
    fileNames: [
      'repo.js',
      'repo.jsx',
      'repo.ts',
      'repo.tsx',
      'repos.js',
      'repos.jsx',
      'repos.ts',
      'repos.tsx',
      'repositories.js',
      'repositories.jsx',
      'repositories.ts',
      'repositories.tsx',
      'repository.js',
      'repository.jsx',
      'repository.ts',
      'repository.tsx',
    ],
    name: 'ngrx-repo',
  },
  {
    enabledFor: [IconPack.Ngrx],
    fileExtensions: [
      'repos/cjs',
      'repos/js',
      'repos/jsx',
      'repos/mjs',
      'repos/ts',
      'repos/tsx',

      'repositories/cjs',
      'repositories/js',
      'repositories/jsx',
      'repositories/mjs',
      'repositories/ts',
      'repositories/tsx',
    ],
    name: 'ngrx-repo-files',
  },
  {
    enabledFor: [IconPack.Ngrx],
    fileExtensions: [
      'state.js',
      'state.jsx',
      'state.ts',
      'state.tsx',

      'states.js',
      'states.jsx',
      'states.ts',
      'states.tsx',
    ],
    fileNames: [
      'state.js',
      'state.jsx',
      'state.ts',
      'state.tsx',
      'states.js',
      'states.jsx',
      'states.ts',
      'states.tsx',
    ],
    name: 'ngrx-state',
  },
  {
    enabledFor: [IconPack.Ngrx],
    fileExtensions: [
      'state/cjs',
      'state/js',
      'state/jsx',
      'state/mjs',
      'state/ts',
      'state/tsx',

      'states/cjs',
      'states/js',
      'states/jsx',
      'states/mjs',
      'states/ts',
      'states/tsx',
    ],
    name: 'ngrx-state-files',
  },
  {
    enabledFor: [IconPack.Ngrx],
    fileExtensions: [
      'selector.js',
      'selector.jsx',
      'selector.ts',
      'selector.tsx',
      'selectors.js',
      'selectors.jsx',
      'selectors.ts',
      'selectors.tsx',
    ],
    fileNames: [
      'selector.js',
      'selector.jsx',
      'selector.ts',
      'selector.tsx',
      'selectors.js',
      'selectors.jsx',
      'selectors.ts',
      'selectors.tsx',
    ],
    name: 'ngrx-selectors',
  },
  {
    enabledFor: [IconPack.Ngrx],
    fileExtensions: [
      'selectors/cjs',
      'selectors/js',
      'selectors/jsx',
      'selectors/mjs',
      'selectors/ts',
      'selectors/tsx',
    ],
    name: 'ngrx-selectors-files',
  },
  {
    fileExtensions: ['nib'],
    name: 'nib',
  },
  {
    fileExtensions: ['5c'],
    name: 'nickle',
  },
  {
    fileNames: [
      'nightwatch.conf.cjs',
      'nightwatch.conf.js',
      'nightwatch.conf.mjs',
      'nightwatch.config.cjs',
      'nightwatch.config.js',
      'nightwatch.config.mjs',
      'nightwatch.json',
    ],
    name: 'nightwatch',
  },
  {
    fileExtensions: ['nimble'],
    name: 'nimble',
  },
  {
    fileExtensions: ['nim', 'nimrod'],
    name: 'nimrod',
  },
  {
    fileExtensions: ['nit'],
    name: 'nit',
  },
  {
    fileExtensions: ['ninja', 'ninja.d'],
    name: 'shuriken',
  },
  {
    fileExtensions: ['nix'],
    name: 'nix',
  },
  {
    fileExtensions: ['nmap', 'nse'],
    name: 'nmap',
  },
  {
    fileExtensions: ['noc'],
    name: 'noc',
  },
  {
    fileNames: [
      'app.cjs',
      'app.js',
      'app.mjs',
      'app.ts',
      'main.cjs',
      'main.js',
      'main.mjs',
      'main.ts',
      'server.cjs',
      'server.js',
      'server.mjs',
      'server.ts',
    ],
    name: 'nodejs',
  },
  {
    fileExtensions: ['njs', 'node', 'node-version'],
    name: 'nodeversion',
  },
  {
    fileExtensions: ['nodemon.json'],
    fileNames: ['nodemon.json'],
    name: 'nodemon',
  },
  {
    fileExtensions: ['nodemonignore'],
    name: 'nodemonignore',
  },
  {
    fileExtensions: ['nokogiri', 'nokogirirc'],
    name: 'nokogiri',
  },
  {
    fileExtensions: ['nomad'],
    name: 'nomad',
  },
  {
    fileExtensions: ['noon'],
    name: 'noon',
  },
  {
    fileNames: [
      'normalize-min.css',
      'normalize-min.less',
      'normalize-min.postcss',
      'normalize-min.sass',
      'normalize-min.scss',
      'normalize-min.styl',
      'normalize-min.stylus',
      'normalize.css',
      'normalize.less',
      'normalize.postcss',
      'normalize.sass',
      'normalize.scss',
      'normalize.styl',
      'normalize.stylus',
    ],
    name: 'normalize',
  },
  {
    fileExtensions: ['note', 'notes', 'scratch'],
    name: 'note',
  },
  {
    fileNames: ['now.json'],
    name: 'now',
  },
  {
    fileExtensions: ['nowignore'],
    name: 'nowignore',
  },
  {
    fileExtensions: ['npmrc'],
    fileNames: ['package.json'],
    name: 'npm',
  },
  {
    fileExtensions: ['npmignore'],
    name: 'npmignore',
  },
  {
    fileNames: ['package-lock.json'],
    name: 'npmlock',
  },
  {
    fileNames: ['npm-shrinkwrap.json'],
    name: 'npmshrinkwrap',
  },
  {
    fileExtensions: ['nsh', 'nsi', 'nsis'],
    name: 'nsis',
  },
  {
    fileExtensions: [
      'integrity.config.cjs',
      'integrity.config.js',
      'integrity.config.mjs',
      'integrity.config.yaml',
      'integrity.config.yml',
      'integrity.json',
      'integrityrc',
      'nsrirc',
      'nsrirc.config.cjs',
      'nsrirc.config.js',
      'nsrirc.config.mjs',
      'nsrirc.config.yaml',
      'nsrirc.config.yml',
      'nsrirc.json',
    ],
    name: 'nsri',
  },
  {
    fileExtensions: ['nsriignore'],
    name: 'nsriignore',
  },
  {
    fileExtensions: ['nu'],
    fileNames: ['Nukefile'],
    name: 'nu',
  },
  {
    fileExtensions: ['npy', 'npz', 'numpy', 'numpyw', 'numsc'],
    name: 'numpy',
  },
  {
    fileExtensions: ['nuclide', 'nuc'],
    name: 'nuclide',
  },
  {
    fileExtensions: ['nupkg', 'nuspec', 'psmdcp', 'snupkg'],
    name: 'nuget',
  },
  {
    fileNames: ['nuget.config'],
    name: 'nugetconfig',
  },
  {
    fileExtensions: ['njk', 'nunj', 'nunjucks'],
    name: 'nunjucks',
  },
  {
    fileNames: ['nuxt.config.cjs', 'nuxt.config.js', 'nuxt.config.mjs', 'nuxt.config.ts'],
    name: 'nuxt',
  },
  {
    fileExtensions: ['esmrc', 'nvmrc'],
    fileNames: ['esmrc', 'nvmrc'],
    name: 'nvm',
  },
  {
    fileExtensions: ['ncs', 'ndb', 'nss'],
    name: 'nwscript',
  },
  {
    fileNames: ['nx.json', 'project.json', 'workspace.json'],
    light: true,
    name: 'nx',
  },
  {
    fileExtensions: ['nxc'],
    name: 'nxc',
  },
];
