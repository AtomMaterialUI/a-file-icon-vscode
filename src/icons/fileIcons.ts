import { FileIcons, IconPack } from '../models/index';

/**
 * Defines file icons
 */
export const fileIcons: FileIcons = {
  defaultIcon: { name: 'file' },
  icons: [
    // region [Custom]
    {
      name: 'indexhtml',
      fileNames: [
        'index.html',
        'index.htm',
        'index.phtml',
        'index.pug',
        'index.jade',
        'index.hbs',
        'index.handlebars',
        'index.twig',
        'index.php',
        'index.jsp',
        'index.ejs',
      ],
    },
    {
      name: 'index',
      fileNames: [
        'index.js',
        'index.cjs',
        'index.mjs',
        'index.ts',
        'index.jsx',
        'index.tsx',
        'index.coffee',
        'index.es6',
        'index.dart',
        'index.svelte',
        'index.vue',
        'index.css',
        'index.scss',
      ],
    },
    {
      name: 'githubActions',
      fileNames: [
        '.github/build.yaml',
        '.github/build.yml',
        '.github/ci.yaml',
        '.github/ci.yml',
        '.github/config.yaml',
        '.github/config.yml',
        '.github/main.yaml',
        '.github/main.yml',
        '.github/release.yaml',
        '.github/release.yml',
        '.github/workflow.yaml',
        '.github/workflow.yml',
      ],
    },
    {
      name: 'githubCode',
      fileNames: ['CODE_OF_CONDUCT.md', 'CODE_OF_CONDUCT.txt'],
    },
    {
      name: 'githubContributing',
      fileNames: ['CONTRIBUTING.md', 'CONTRIBUTING.txt'],
    },
    {
      name: 'github',
      fileNames: [
        'COMMIT_MESSAGE_TEMPLATE.md',
        'COMMIT_MESSAGE_TEMPLATE.txt',
        'PULL_REQUEST_TEMPLATE.md',
        'PULL_REQUEST_TEMPLATE.txt',
        'TEMPLATE.md',
        'TEMPLATE.txt',
      ],
      light: true,
    },
    {
      name: 'readme',
      fileNames: [
        'README',
        'README.md',
        'README.txt',
        'readme',
        'readme.md',
        'readme.txt',
      ],
      light: true,
    },
    {
      name: 'gitcommit',
      fileNames: ['COMMIT_EDITMSG', 'ATOM_COMMIT_EDITMSG'],
    },
    {
      name: 'githubCommit',
      fileNames: [
        'COMMIT_MESSAGE_CONVENTION.md',
        'COMMIT_MESSAGE_CONVENTION.txt',
      ],
    },
    {
      name: 'gitmerge',
      fileNames: ['MERGE_HEAD', 'MERGE_MODE', 'MERGE_MSG'],
    },
    {
      name: 'install',
      fileNames: [
        'INSTALL',
        'INSTALL.md',
        'INSTALL.sh',
        'INSTALL.txt',
        'INSTALL.yaml',
        'INSTALL.yml',
        'install',
        'install.md',
        'install.sh',
        'install.txt',
        'install.yaml',
        'install.yml',
      ],
    },
    {
      name: 'funding',
      fileNames: [
        'FUNDING',
        'FUNDING.md',
        'FUNDING.sh',
        'FUNDING.txt',
        'FUNDING.yaml',
        'FUNDING.yml',
        'funding',
        'funding.md',
        'funding.sh',
        'funding.txt',
        'funding.yaml',
        'funding.yml',
      ],
    },
    {
      name: 'stalebot',
      fileNames: ['stale.yml', 'stale.yaml'],
    },
    {
      name: 'plugin',
      fileNames: ['META-INF/plugin.xml'],
    },
    {
      name: 'i18nProperties',
      fileExtensions: ['bundle.properties', 'messages/properties'],
    },
    {
      name: 'i18nJava',
      fileExtensions: ['bundle.java', 'messages/java'],
    },
    {
      name: 'i18nKotlin',
      fileExtensions: ['bundle.kt', 'messages/kt'],
    },
    {
      name: 'spray',
      fileNames: ['spray.conf', 'reference.conf', 'application.conf'],
    },
    // endregion [Custom]

    // region [Tests]
    {
      name: 'testcoffee',
      fileExtensions: [
        'test.coffee',
        'test.litcoffee',
        'spec.coffee',
        'spec.litcoffee',
        'test/coffee',
        'test/litcoffee',
        'spec/coffee',
        'spec/litcoffee',
        'tests/coffee',
        'tests/litcoffee',
        'specs/coffee',
        'specs/litcoffee',
      ],
    },
    {
      name: 'testdart',
      fileExtensions: [
        'test.dart',
        'spec.dart',
        'test/dart',
        'spec/dart',
        'tests/dart',
        'specs/dart',
      ],
    },
    {
      name: 'testgo',
      fileExtensions: [
        'test.go',
        'spec.go',
        'test/go',
        'spec/go',
        'tests/go',
        'specs/go',
      ],
    },
    {
      name: 'testhaskell',
      fileExtensions: [
        'test.hs',
        'spec.hs',
        'test/hs',
        'tests/hs',
        'spec/hs',
        'specs/hs',
      ],
    },
    {
      name: 'testjava',
      fileExtensions: ['test/java', 'tests/java', 'unit/java', 'junit/java'],
    },
    {
      name: 'testkotlin',
      fileExtensions: ['test/kt', 'tests/kt', 'unit/kt', 'junit/kt'],
    },
    {
      name: 'testjs',
      fileExtensions: [
        'test.js',
        'spec.js',
        'test/js',
        'tests/js',
        'spec/js',
        'specs/js',
        'test.cjs',
        'spec.cjs',
        'test/cjs',
        'tests/cjs',
        'spec/cjs',
        'specs/cjs',
        'test.mjs',
        'spec.mjs',
        'test/mjs',
        'tests/mjs',
        'spec/mjs',
        'specs/mjs',
        'test.es6',
        'spec.es6',
        'test/es6',
        'tests/es6',
        'spec/es6',
        'specs/es6',
      ],
      light: true,
    },
    {
      name: 'testperl',
      fileExtensions: [
        'test.pl',
        'spec.pl',
        'test/pl',
        'tests/pl',
        'spec/pl',
        'specs/pl',
        'test.pl6',
        'spec.pl6',
        'test/pl6',
        'tests/pl6',
        'spec/pl6',
        'specs/pl6',
        'test.perl',
        'spec.perl',
        'test/perl',
        'tests/perl',
        'spec/perl',
        'specs/perl',
        'test.pm6',
        'spec.pm6',
        'test/pm6',
        'tests/pm6',
        'spec/pm6',
        'specs/pm6',
        'test.ph',
        'spec.ph',
        'test/ph',
        'tests/ph',
        'spec/ph',
        'specs/ph',
      ],
    },
    {
      name: 'testreact',
      fileExtensions: [
        'test.jsx',
        'spec.jsx',
        'test/jsx',
        'tests/jsx',
        'spec/jsx',
        'specs/jsx',
        'test.tsx',
        'spec.tsx',
        'test/tsx',
        'tests/tsx',
        'spec/tsx',
        'specs/tsx',
      ],
    },
    {
      name: 'testpy',
      fileExtensions: [
        'test.py',
        'spec.py',
        'test/py',
        'tests/py',
        'spec/py',
        'specs/py',
        'test.ipy',
        'spec.ipy',
        'test/ipy',
        'tests/ipy',
        'spec/ipy',
        'specs/ipy',
        'test.py3',
        'spec.py3',
        'test/py3',
        'tests/py3',
        'spec/py3',
        'specs/py3',
        'test.python',
        'spec.python',
        'test/python',
        'tests/python',
        'spec/python',
        'specs/python',
        'test.whl',
        'spec.whl',
        'test/whl',
        'tests/whl',
        'spec/whl',
        'specs/whl',
        'test.pep',
        'spec.pep',
        'test/pep',
        'tests/pep',
        'spec/pep',
        'specs/pep',
      ],
    },
    {
      name: 'testruby',
      fileExtensions: [
        'test.rb',
        'spec.rb',
        'test/rb',
        'tests/rb',
        'spec/rb',
        'specs/rb',
        'test.rbs',
        'spec.rbs',
        'test/rbs',
        'tests/rbs',
        'spec/rbs',
        'specs/rbs',
        'test.ruby',
        'spec.ruby',
        'test/ruby',
        'tests/ruby',
        'spec/ruby',
        'specs/ruby',
      ],
    },
    {
      name: 'testrust',
      fileExtensions: [
        'test.rs',
        'spec.rs',
        'test/rs',
        'tests/rs',
        'spec/rs',
        'specs/rs',
      ],
    },
    {
      name: 'testscala',
      fileExtensions: [
        'test.scala',
        'spec.scala',
        'test/scala',
        'tests/scala',
        'spec/scala',
        'specs/scala',
      ],
    },
    {
      name: 'testts',
      fileExtensions: [
        'test.ts',
        'spec.ts',
        'test/ts',
        'tests/ts',
        'spec/ts',
        'specs/ts',
      ],
    },
    // endregion [Tests]

    // region [0-9]
    {
      name: '11ty',
      fileNames: [
        '.11ty.cjs',
        '.11ty.js',
        '.11ty.mjs',
        '.11ty.ts',
        '.11tyignore',
        '.eleventy.cjs',
        '.eleventy.js',
        '.eleventy.mjs',
        '.eleventy.ts',
        '.eleventyignore',
      ],
      light: true,
    },
    {
      name: '1c',
      fileExtensions: ['bsl', 'mdo', 'sdbl', 'os'],
    },
    {
      name: '3d',
      fileExtensions: [
        'ac',
        'c4d',
        'cginc',
        'dxf',
        'geo',
        'obj',
        'shader',
        'stl',
        'tesc',
        'tese',
        'x',
      ],
    },
    {
      name: '3dsmax',
      fileExtensions: ['osl', 'dwg', '3ds'],
    },
    {
      name: '4d',
      fileExtensions: ['4dm', '4db'],
    },

    // endregion [0-9]

    // region [A]
    {
      name: 'aplus',
      fileExtensions: ['a+'],
    },
    {
      name: 'access',
      fileExtensions: [
        'accda',
        'accdb',
        'accde',
        'accdr',
        'accdt',
        'adn',
        'laccdb',
        'maf',
        'mam',
        'maq',
        'mar',
        'mdw',
      ],
    },
    {
      name: 'abap',
      fileExtensions: ['abap', 'abp'],
    },
    {
      name: 'abc',
      fileExtensions: ['abc'],
    },
    {
      name: 'abif',
      fileExtensions: ['ab1', 'abif', 'fsa'],
    },
    {
      name: 'acre',
      fileNames: ['acre.config'],
    },
    {
      name: 'act',
      fileNames: ['.actrc'],
    },
    {
      name: 'actionscript',
      fileExtensions: ['as', 'as3', 'jsfl'],
    },
    {
      name: 'ada',
      fileExtensions: ['ada', 'adb', 'ads'],
    },
    {
      name: 'animate',
      fileExtensions: ['fla', 'xfl'],
    },
    {
      name: 'ae',
      fileExtensions: ['aep', 'aet'],
    },
    {
      name: 'ai',
      fileExtensions: ['ai', 'aia', 'ait'],
    },
    {
      name: 'indesign',
      fileExtensions: ['id', 'idml', 'indb', 'indd', 'indl', 'indt'],
    },
    {
      name: 'psd',
      fileExtensions: ['atn', 'psb', 'psd'],
    },
    {
      name: 'premiere',
      fileExtensions: ['prel', 'prproj', 'psq'],
    },
    {
      name: 'advpl',
      fileExtensions: ['ahu', 'aph', 'prw', 'tlpp'],
    },
    {
      name: 'affectscript',
      fileExtensions: ['affect'],
    },
    {
      name: 'affinity',
      fileExtensions: ['afdesign', 'afphoto', 'afpub'],
    },
    {
      name: 'agda',
      fileExtensions: ['agda', 'lagda'],
    },
    {
      name: 'akka',
      fileExtensions: ['akka'],
    },
    {
      name: 'al',
      fileExtensions: ['al'],
    },
    {
      name: 'alacritty',
      fileNames: ['alacritty.yml', '.alacritty.yml'],
    },
    {
      name: 'alex',
      fileNames: ['alexrc', '.alexrc'],
    },
    {
      name: 'alexignore',
      fileNames: ['.alexignore'],
    },
    {
      name: 'allcontributors',
      fileNames: [
        'all-contributorsrc',
        '.all-contributorsrc',
        'allcontributorsrc',
        '.allcontributorsrc',
      ],
    },
    {
      name: 'alloy',
      fileExtensions: ['als'],
    },
    {
      name: 'alpine',
      fileNames: ['APKBUILD', '.APKBUILD'],
    },
    {
      name: 'amigaos',
      fileExtensions: ['arexx'],
    },
    {
      name: 'ampl',
      fileExtensions: ['ampl'],
    },
    {
      name: 'amplication',
      fileNames: ['ampconfig.json'],
    },
    {
      name: 'amplify',
      fileNames: ['amplify.yml', 'amplify.yaml'],
    },
    {
      name: 'amusewiki',
      fileExtensions: ['muse'],
    },
    {
      name: 'analytica',
      fileExtensions: ['ana'],
    },
    {
      name: 'androidManifest',
      fileNames: ['AndroidManifest.xml'],
    },
    {
      name: 'android',
      fileNames: ['MainActivity.java', 'MainActivity.kt'],
    },
    {
      name: 'androidSmali',
      fileExtensions: ['smali', 'rsh', 'webarchivexml'],
    },
    {
      name: 'angelscript',
      fileExtensions: ['acs', 'angelscript'],
    },
    {
      name: 'angularCli',
      fileNames: [
        'angular.json',
        'angular-cli.json',
        '.angular-cli.json',
        '.angular.json',
      ],
    },
    {
      name: 'angularjs',
      fileNames: ['angular.js', 'angular.min.js'],
    },
    {
      name: 'angular',
      fileExtensions: [
        'ng.html',
        'ng.js',
        'ng.ts',
        'ng-template',
        'ngtemplate',
      ],
    },
    {
      name: 'ngrxjs',
      fileExtensions: ['container.js', 'container.ts', 'container.dart'],
    },
    {
      name: 'angularcomponent',
      fileExtensions: [
        'component.js',
        'component.ts',
        'component.dart',
        'comp.js',
        'comp.ts',
        'comp.dart',
      ],
      enabledFor: [IconPack.Angular, IconPack.Ngrx],
    },
    {
      name: 'angularcontroller',
      fileExtensions: [
        'controller.js',
        'controller.ts',
        'controller.dart',
        'ctrl.js',
        'ctrl.ts',
        'ctrl.dart',
      ],
      enabledFor: [IconPack.Angular, IconPack.Ngrx],
    },
    {
      name: 'angulardirective',
      fileExtensions: ['directive.js', 'directive.ts', 'directive.dart'],
      enabledFor: [IconPack.Angular, IconPack.Ngrx],
    },
    {
      name: 'angularguard',
      fileExtensions: ['guard.js', 'guard.ts', 'guard.dart'],
      enabledFor: [IconPack.Angular, IconPack.Ngrx],
    },
    {
      name: 'angularinterceptor',
      fileExtensions: ['interceptor.js', 'interceptor.ts', 'interceptor.dart'],
      enabledFor: [IconPack.Angular, IconPack.Ngrx],
    },
    {
      name: 'angularrouting',
      fileNames: [
        'angular-routing.js',
        'angular-routing.ts',
        'angular-routing.dart',
        'angular_routing.js',
        'angular_routing.ts',
        'angular_routing.dart',
      ],
      fileExtensions: ['routing.js', 'routing.ts', 'routing.dart'],
      enabledFor: [IconPack.Angular, IconPack.Ngrx],
    },
    {
      name: 'angularapprouting',
      fileNames: [
        'app-routing.module.js',
        'app-routing.module.ts',
        'app-routing.module.dart',
      ],
      enabledFor: [IconPack.Angular, IconPack.Ngrx],
    },
    {
      name: 'angularmodule',
      fileExtensions: ['module.js', 'module.ts', 'module.dart'],
      enabledFor: [IconPack.Angular, IconPack.Ngrx],
    },
    {
      name: 'angularservice',
      fileExtensions: ['service.js', 'service.ts', 'service.dart'],
      enabledFor: [IconPack.Angular, IconPack.Ngrx],
    },
    {
      name: 'ionic',
      fileExtensions: ['page.js', 'page.ts', 'page.dart'],
      enabledFor: [IconPack.Angular, IconPack.Ngrx],
    },
    {
      name: 'angularpipe',
      fileExtensions: ['pipe.js', 'pipe.ts', 'pipe.dart'],
      enabledFor: [IconPack.Angular, IconPack.Ngrx],
    },
    {
      name: 'angularresolver',
      fileExtensions: ['resolver.js', 'resolver.ts', 'resolver.dart'],
      enabledFor: [IconPack.Angular, IconPack.Ngrx],
    },
    {
      name: 'angulartailwind',
      fileNames: ['ng-tailwind.js', 'ng-tailwind.ts', 'ng-tailwind.dart'],
      enabledFor: [IconPack.Angular, IconPack.Ngrx],
    },
    {
      name: 'animestudio',
      fileExtensions: ['anime', 'animestudio'],
    },
    {
      name: 'ansible',
      fileNames: [
        'ansible.yml',
        'ansible.yaml',
        'ansible.cfg',
        'ansible_inventory.yml',
        'site.yml',
        'site.yaml',
        'playbook.yml',
        'playbook.yaml',
        'playbook.cfg',
        'inventory.yml',
        'inventory.yaml',
        'webservers.yml',
        'webservers.yaml',
        'dbservers.yml',
        'dbservers.yaml',
        'galaxy.yml',
        'galaxy.yaml',
      ],
    },
    {
      name: 'ant',
      fileNames: ['ant.xml', '.ant'],
    },
    {
      name: 'antlers',
      fileExtensions: ['antlers.html'],
    },
    {
      name: 'antlr',
      fileExtensions: ['g', 'g4'],
    },
    {
      name: 'antwar',
      fileNames: [
        'antwar.conf.js',
        'antwar.conf.cjs',
        'antwar.conf.mjs',
        'antwar.config.js',
        'antwar.config.cjs',
        'antwar.config.mjs',
        '.antwar.conf.js',
        '.antwar.conf.cjs',
        '.antwar.conf.mjs',
        '.antwar.config.js',
        '.antwar.config.cjs',
        '.antwar.config.mjs',
      ],
    },
    {
      name: 'any',
      fileExtensions: ['any'],
    },
    {
      name: 'apacheconf',
      fileNames: [
        'apache.conf',
        'apache2.conf',
        'apache.dev.conf',
        'apache2.dev.conf',
        'apache.prod.conf',
        'apache2.prod.conf',
        'apache.vhost.conf',
        'apache2.vhost.conf',
        'httpd.conf',
        'httpd.dev.conf',
        'httpd.prod.conf',
        'httpd.vhost.conf',
        '.apacheconf',
        '.apache.conf',
        '.apache2.conf',
      ],
    },
    {
      name: 'apache',
      fileExtensions: ['vhost', 'thrift'],
    },
    {
      name: 'apex',
      fileExtensions: ['cls', 'apex'],
    },
    {
      name: 'apib',
      fileExtensions: ['apib'],
    },
    {
      name: 'apiextractor',
      fileNames: [
        'api-extractor.json',
        'api-extractor.common.json',
        'api-extractor-base.json',
      ],
    },
    {
      name: 'apk',
      fileExtensions: ['apk'],
    },
    {
      name: 'apl',
      fileExtensions: ['apl', 'apla', 'aplc', 'aplf', 'apli', 'apln', 'aplo'],
    },
    {
      name: 'apollo',
      fileNames: [
        'apollo.config.js',
        'apollo.config.cjs',
        'apollo.config.mjs',
        'apollo.config.ts',
      ],
    },
    {
      name: 'appcelerator',
      fileNames: [
        'appcelerator.js',
        'appcelerator.cjs',
        'appcelerator.mjs',
        'appcelerator.ts',
      ],
    },
    {
      name: 'appsemble',
      fileNames: [
        '.appsemblerc',
        '.appsemblerc.yml',
        '.appsemblerc.yaml',
        'app-definition.yml',
        'app-definition.yaml',
      ],
    },
    {
      name: 'appveyor',
      fileNames: [
        '.appveyor.yml',
        '.appveyor.yaml',
        'appveyor.yml',
        'appveyor.yaml',
      ],
    },
    {
      name: 'applescript',
      fileExtensions: ['applescript', 'scpt'],
    },
    {
      name: 'arc',
      fileExtensions: ['arc'],
    },
    {
      name: 'archlinux',
      fileNames: ['.install', '.SRCINFO', 'PKGBUILD', '.yaourtrc'],
    },
    {
      name: 'pacman',
      fileNames: ['pacman.conf', 'pamac.conf', 'makepkg.conf'],
    },
    {
      name: 'arduino',
      fileExtensions: ['ino'],
    },
    {
      name: 'arend',
      fileNames: ['arend.yml', 'arend.yaml'],
      fileExtensions: ['arc', 'ard', 'arend'],
    },
    {
      name: 'arm',
      fileExtensions: ['arm'],
    },
    {
      name: 'arttext',
      fileExtensions: ['art3', 'art4'],
    },
    {
      name: 'asciidoc',
      fileExtensions: ['adoc', 'asciidoc', 'asc', 'ad'],
    },
    {
      name: 'aspectj',
      fileExtensions: ['aj', 'aspectj'],
    },
    {
      name: 'asmpure',
      fileExtensions: ['a', 'i', 's'],
    },
    {
      name: 'asm',
      fileExtensions: [
        'asm',
        'inc',
        'ms',
        'agc',
        'lst',
        'aea',
        'argus',
        'mitigus',
      ],
    },
    {
      name: 'hitachi',
      fileExtensions: ['h8', 'h8S', 'h8SX', 'h8000', 'h8300'],
    },
    {
      name: 'intel',
      fileExtensions: ['x32', 'x64', 'x86', 'i386', '80386'],
    },
    {
      name: 'vax',
      fileExtensions: ['vax', 'vmasm'],
    },
    {
      name: 'asp',
      fileExtensions: [
        'asp',
        'asa',
        'asax',
        'ascx',
        'ashx',
        'asmx',
        'aspx',
        'axd',
      ],
    },
    {
      name: 'astro',
      fileExtensions: ['astro'],
    },
    {
      name: 'astroconfig',
      fileNames: [
        'astro.config.mjs',
        'astro.config.cjs',
        'astro.config.js',
        'astro.config.ts',
      ],
    },
    {
      name: 'artisan',
      fileNames: ['artisan', 'artisan.php'],
    },
    {
      name: 'astyle',
      fileNames: ['.astylerc'],
    },
    {
      name: 'asymptote',
      fileExtensions: ['asy'],
    },
    {
      name: 'atom',
      fileExtensions: ['atomproject.json', 'atomproject.cson'],
      light: true,
    },
    {
      name: 'apm',
      fileNames: ['.apmrc'],
      light: true,
    },
    {
      name: 'atoum',
      fileExtensions: ['atoum.php'],
      fileNames: ['atoum.config.php'],
    },
    {
      name: 'ats',
      fileExtensions: ['ats', 'dats', 'hats', 'sats'],
    },
    {
      name: 'audacity',
      fileExtensions: ['aup', 'audacity'],
    },
    {
      name: 'augeas',
      fileExtensions: ['aug', 'augeas'],
    },
    {
      name: 'aurelia',
      fileNames: [
        'aurelia.json',
        'aurelia.js',
        'aurelia.cjs',
        'aurelia.mjs',
        'aurelia.ts',
        'aureliafile.json',
        'aureliafile.js',
        'aureliafile.cjs',
        'aureliafile.mjs',
        'aureliafile.ts',
      ],
    },
    {
      name: 'authors',
      fileNames: ['authors', 'authors.txt', 'authors.md', 'authors.rst'],
    },
    {
      name: 'auto',
      fileNames: [
        '.autorc',
        '.autorc.json',
        '.autorc.yml',
        '.autorc.yaml',
        '.autorc.js',
        '.autorc.cjs',
        '.autorc.mjs',
        'auto.config.js',
        'auto.config.cjs',
        'auto.config.mjs',
        'auto.config.ts',
        'auto.config.yaml',
        'auto.config.yml',
        'auto.config.json',
      ],
    },
    {
      name: 'ahk',
      fileExtensions: ['ahk', 'ahkl'],
    },
    {
      name: 'autoit',
      fileExtensions: ['au3', 'autoit'],
    },
    {
      name: 'ava',
      fileNames: [
        '.avarc',
        '.avarc.json',
        '.avarc.yml',
        '.avarc.yaml',
        '.avarc.js',
        '.avarc.ts',
        '.avarc.cjs',
        '.avarc.mjs',
        'ava.config.js',
        'ava.config.cjs',
        'ava.config.mjs',
        'ava.config.ts',
        'ava.config.yaml',
        'ava.config.yml',
        'ava.config.json',
      ],
    },
    {
      name: 'avif',
      fileExtensions: ['avif'],
    },
    {
      name: 'avr',
      fileExtensions: ['avr', 'avrasm'],
    },
    {
      name: 'avro',
      fileExtensions: ['avsc', 'avpr', 'avdl', 'avcs'],
    },
    {
      name: 'awk',
      fileExtensions: ['awk', 'gawk', 'mawk', 'nawk', 'pawk', 'tawk'],
    },
    {
      name: 'azure',
      fileExtensions: ['azcli'],
    },
    {
      name: 'azurepipelines',
      fileNames: [
        'azure-pipelines.yml',
        'azure-pipelines.yaml',
        'azure-pipelines.ci.yml',
        'azure-pipelines.ci.yaml',
        'azure-pipelines.release.yml',
        'azure-pipelines.release.yaml',
      ],
    },

    // endregion

    // region [I]
    {
      name: 'i18n',
      fileExtensions: ['po', 'pot', 'mo', 'strings'],
    },
    {
      name: 'i18nlang',
      fileExtensions: [
        'translation/js',
        'translation/json',
        'translation/yaml',
        'translation/yml',
        'translation/ts',
        'translation/rst',
        'translation/md',
        'translations/js',
        'translations/json',
        'translations/yaml',
        'translations/yml',
        'translations/ts',
        'translations/rst',
        'translations/md',
        'lang/js',
        'lang/json',
        'lang/yaml',
        'lang/yml',
        'lang/ts',
        'lang/rst',
        'lang/md',
        'locale/js',
        'locale/json',
        'locale/yaml',
        'locale/yml',
        'locale/ts',
        'locale/rst',
        'locale/md',
        'locales/js',
        'locales/json',
        'locales/yaml',
        'locales/yml',
        'locales/ts',
        'locales/rst',
        'locales/md',
      ],
    },
    {
      name: 'icl',
      fileExtensions: ['icl'],
    },
    {
      name: 'icomoon',
      fileNames: ['icomoon.json', 'icomoon.dev.json', 'icomoon.prod.json'],
    },
    {
      name: 'icu',
      fileExtensions: ['icu', 'nrm'],
    },
    {
      name: 'idea',
      fileExtensions: ['iml', 'icls'],
    },
    {
      name: 'idris',
      fileExtensions: ['idr', 'lidr', 'ipkg', 'ibc', 'idris'],
    },
    {
      name: 'idl',
      fileExtensions: ['dlm', 'idl'],
    },
    {
      name: 'igor',
      fileExtensions: ['ipf'],
    },
    {
      name: 'imba',
      fileExtensions: ['imba', 'imba2'],
    },
    {
      name: 'imgbot',
      fileExtensions: ['imgbotconfig'],
    },
    {
      name: 'informix',
      fileExtensions: ['4gl'],
    },
    {
      name: 'indexpy',
      fileNames: ['__init__.py'],
    },
    {
      name: 'infopath',
      fileExtensions: ['xsn', 'xsf', 'xtp2', 'infopathxml'],
    },
    {
      name: 'inform',
      fileExtensions: ['ni', 'i7x'],
    },
    {
      name: 'ink',
      fileExtensions: ['ink', 'ink2'],
    },
    {
      name: 'inkscape',
      fileExtensions: ['inx'],
      light: true,
    },
    {
      name: 'inno',
      fileExtensions: ['iss', 'isl'],
    },
    {
      name: 'iso',
      fileExtensions: ['iso', 'udf', 'img', 'nrg', 'cda', 'cdr'],
    },
    {
      name: 'istanbul',
      fileExtensions: ['nycrc.json', 'nycrc.yml', 'nycrc.yaml', 'nycrc'],
    },
    {
      name: 'istanbulconf',
      fileNames: [
        'nyc.config.js',
        'nyc.config.cjs',
        'nyc.config.mjs',
        'nyc.config.ts',
        'nyc.config.json',
        'nyc.config.yaml',
        'nyc.config.yml',
      ],
    },
    {
      name: 'io',
      fileExtensions: ['io'],
    },
    {
      name: 'iodine',
      fileExtensions: ['iodine'],
    },
    {
      name: 'ioke',
      fileExtensions: ['ik'],
    },
    {
      name: 'ionic',
      fileNames: [
        'ionic.config.json',
        'ionic.config.js',
        'ionic.config',
        'ionic.project',
        'ionic.project.json',
        'ionic.project.js',
      ],
    },
    {
      name: 'isabelle',
      fileExtensions: ['thy'],
      light: true,
    },

    // endregion

    // region [M]
    {
      name: 'macaulay',
      fileExtensions: ['m2'],
    },
    {
      name: 'magento',
      fileExtensions: ['mage'],
    },
    {
      name: 'magit',
      fileExtensions: ['magit'],
    },
    {
      name: 'make',
      fileExtensions: ['mak', 'mk', 'mms', 'make', 'am', 'bb'],
    },
    {
      name: 'makefile',
      fileNames: [
        'makefile',
        'Makefile',
        'BSDmakefile',
        'GNUmakefile',
        'Kbuild',
        'Makefile.boot',
        'Makefile.in',
        'Makefile.inc',
        'Makefile.wat',
        'Makefile.win',
        'Makefile.watcom',
        'Makefile.vc',
        'Makefile.unx',
        'Makefile.unix',
        'mkfile',
      ],
    },
    {
      name: 'mako',
      fileExtensions: ['mako', 'mao'],
    },
    {
      name: 'manpage',
      fileExtensions: [
        'man',
        'man1',
        'man2',
        'man3',
        'man4',
        'man5',
        'man6',
        'man7',
        'man8',
        'man9',
        'ron',
        'mdoc',
        'rnh',
        'rno',
        'runoff',
        'roff',
      ],
    },
    {
      name: 'manifest',
      fileExtensions: ['manifest', 'mf', 'webmanifest'],
      fileNames: [
        'manifest.json',
        'manifest.bak',
        'manifest',
        'manifest.skip',
        'manifest.webapp',
        'manifest.yml',
        'manifest.yaml',
        'manifest.txt',
        'manifest.xml',
      ],
    },
    {
      name: 'manjaro',
      fileExtensions: [
        'pkg.tar.xz',
        'pkg.tar.zst',
        'pkg.tar.gz',
        'pkg.tar.bz2',
      ],
    },
    {
      name: 'mapbox',
      fileExtensions: ['mss'],
    },
    {
      name: 'markdownlint',
      fileNames: [
        '.markdownlint',
        '.markdownlintrc',
        '.mdlrc',
        '.markdownlint.json',
        '.markdownlint.yml',
        '.markdownlint.yaml',
        '.markdownlint.jsonc',
      ],
    },
    {
      name: 'markdownlintignore',
      fileExtensions: ['markdownlintignore', 'mdlignore'],
    },
    {
      name: 'marko',
      fileExtensions: ['marko', 'marko.js', 'marko.cjs', 'marko.mjs'],
    },
    {
      name: 'markup',
      fileExtensions: ['xhtml', 'xht', 'shtml', 'shtm', 'dhtml', 'dhtm', 'dtd'],
    },
    {
      name: 'master',
      fileNames: [
        'master.json',
        'master.js',
        'master.ts',
        'master.cjs',
        'master.mjs',
      ],
    },
    {
      name: 'materialize',
      fileNames: [
        'materialize.js',
        'materialize.min.js',
        'materialize.css',
        'materialize.min.css',
        'materialize.scss',
        'materialize.cjs',
        'materialize.mjs',
      ],
    },
    {
      name: 'mathematica',
      fileExtensions: ['ma', 'mb', 'mt', 'cdf', 'nb', 'wl', 'wlt', 'nbp'],
    },
    {
      name: 'matlab',
      fileExtensions: [
        'mlx',
        'matlab',
        'mdlp',
        'mn',
        'sldd',
        'slx',
        'slxp',
        'mlappinstall',
        'mlpkginstall',
        'mltbx',
        'fig',
        'mex',
        'mexn',
        'mexw',
        'mexa',
        'mexmaci',
        'mexmaci64',
        'mexw32',
        'mexw64',
        'mexglx',
        'mexrs6',
        'mum',
        'mx',
        'mx3',
        'rwd',
        'slxc',
        'smv',
        'xvc',
      ],
    },
    {
      name: 'mathjax',
      fileNames: [
        'MathJax.js',
        'MathJax.cjs',
        'MathJax.mjs',
        'MathJax.js.map',
        'MathJax.js.gz',
        'MathJax-config.js',
        'MathJax-config.cjs',
        'MathJax-config.mjs',
        'MathJax-config.js.map',
        'MathJax-config.js.gz',
        'TeX-MML-AM_CHTML.js',
        'TeX-MML-AM_CHTML.cjs',
        'TeX-MML-AM_CHTML.mjs',
        'TeX-MML-AM_CHTML.js.map',
        'TeX-MML-AM_CHTML.js.gz',
      ],
    },
    {
      name: 'maven',
      fileNames: ['pom.xml', '.flattened-pom.xml'],
    },
    {
      name: 'max',
      fileExtensions: [
        'maxpat',
        'maxhelp',
        'maxproj',
        'maxref',
        'maxobj',
        'pat',
        'mxt',
      ],
    },
    {
      name: 'maya',
      fileExtensions: ['maya', 'mel', 'mcfi', 'mcfp'],
    },
    {
      name: 'mdx',
      fileExtensions: ['mdx'],
    },
    {
      name: 'mediawiki',
      fileExtensions: ['mediawiki', 'wiki', 'wikitext'],
    },
    {
      name: 'mercurial',
      fileExtensions: ['hg', 'hgsub', 'hgsubstate', 'hgrc', 'hgtags'],
    },
    {
      name: 'mercurialignore',
      fileExtensions: ['hgignore'],
    },
    {
      name: 'mercury',
      fileExtensions: ['moo'],
    },
    {
      name: 'merlin',
      fileExtensions: ['merlin'],
    },
    {
      name: 'mermaid',
      fileExtensions: ['mmd', 'mermaid', 'mmdc'],
    },
    {
      name: 'meson',
      fileNames: ['meson.build', 'meson_options.txt'],
    },
    {
      name: 'metal',
      fileExtensions: ['metal', 'metallib', 'air'],
    },
    {
      name: 'metapost',
      fileExtensions: ['mp', 'mpost', 'mpx', 'mpy', 'mf'],
    },
    {
      name: 'meteor',
      fileExtensions: ['meteor'],
    },
    {
      name: 'minecraft',
      fileExtensions: [
        'mcfunction',
        'mcmeta',
        'mcpack',
        'mcrcon',
        'mcreator',
        'mclevel',
        'mcworld',
        'mcmod',
      ],
    },
    {
      name: 'minizinc',
      fileExtensions: ['mzn', 'fzn', 'dzn'],
    },
    {
      name: 'mint',
      fileExtensions: ['mint'],
    },
    {
      name: 'mirah',
      fileExtensions: ['mirah', 'mir', 'druby', 'duby'],
    },
    {
      name: 'mixin',
      fileExtensions: ['mixin', 'mixin.json', 'mixins', 'mixins.json'],
    },
    {
      name: 'mirc',
      fileExtensions: ['mrc', 'mirc', 'mircscript'],
    },
    {
      name: 'mjml',
      fileExtensions: ['mjml', 'mjmlslim'],
    },
    {
      name: 'mkdocs',
      fileNames: ['mkdocs.yml', 'mkdocs.yaml', '.mkdocs.yml', '.mkdocs.yaml'],
    },
    {
      name: 'mlang',
      fileExtensions: ['mlang', 'pq'],
    },
    {
      name: 'mobx',
      fileExtensions: [
        'mobx',
        'mobx.js',
        'mobx.ts',
        'mobx.cjs',
        'mobx.mjs',
        'observable.js',
        'observable.ts',
        'observable.cjs',
        'observable.mjs',
      ],
    },
    {
      name: 'mocha',
      fileNames: ['mocha.opts', '.mocharc', '.mocharc.js', '.mocharc.json'],
      fileExtensions: [
        'mocha.js',
        'mocha.ts',
        'mocha.cjs',
        'mocha.mjs',
        'mocha.json',
        'mocha.yml',
        'mocha.yaml',
      ],
    },
    {
      name: 'mock',
      fileExtensions: [
        'mocks/js',
        'mocks/ts',
        'mocks/cjs',
        'mocks/mjs',
        'mocks/json',
        'mocks/dart',
        'mocks/java',
        'mocks/swift',
        'mocks/go',
        'mocks/py',
        'mocks/rb',
        'mocks/php',
        'mocks/cs',
        'mocks/pl',

        'mock.js',
        'mock.ts',
        'mock.cjs',
        'mock.mjs',
        'mock.json',
        'mock.dart',
        'mock.java',
        'mock.swift',
        'mock.go',
        'mock.py',
        'mock.rb',
        'mock.php',
        'mock.cs',
        'mock.pl',

        'spy',
        'spy.js',
        'spy.ts',
        'spy.cjs',
        'spy.mjs',
        'spy.json',
        'spy.dart',
        'spy.java',
        'spy.swift',
        'spy.go',
        'spy.py',
        'spy.rb',
        'spy.php',
        'spy.cs',
        'spy.pl',

        'stub.js',
        'stub.ts',
        'stub.cjs',
        'stub.mjs',
        'stub.json',
        'stub.dart',
        'stub.java',
        'stub.swift',
        'stub.go',
        'stub.py',
        'stub.rb',
        'stub.php',
        'stub.cs',
        'stub.pl',
      ],
    },
    {
      name: 'modelica',
      fileExtensions: ['mo', 'mos'],
    },
    {
      name: 'modernizr',
      fileNames: [
        '.modernizrrc',
        '.modernizrrc.js',
        '.modernizrrc.ts',
        '.modernizrrc.mjs',
        '.modernizrrc.cjs',
        '.modernizrrc.json',
        'modernizr.js',
        'modernizr.ts',
        'modernizr.cjs',
        'modernizr.mjs',
        'modernizr.json',
        'modernizr.custom.js',
        'modernizr.custom.ts',
        'modernizr.custom.cjs',
        'modernizr.custom.mjs',
        'modernizr-dev.js',
        'modernizr-dev.ts',
        'modernizr-dev.cjs',
        'modernizr-dev.mjs',
      ],
    },
    {
      name: 'modernweb',
      fileNames: [
        'web-dev-server.config.js',
        'web-dev-server.config.ts',
        'web-dev-server.config.mjs',
        'web-dev-server.config.cjs',
        'web-test-runner.config.js',
        'web-test-runner.config.ts',
        'web-test-runner.config.mjs',
        'web-test-runner.config.cjs',
      ],
    },
    {
      name: 'modo',
      fileExtensions: ['modo', 'lxo'],
    },
    {
      name: 'modula2',
      fileExtensions: ['mod', 'def'],
    },
    {
      name: 'modula3',
      fileNames: ['m3config', 'm3overrides', 'm3makefile'],
      fileExtensions: ['m3', 'i3', 'mg', 'ig'],
    },
    {
      name: 'moho',
      fileExtensions: [
        'moho',
        'mohoaction',
        'mohobrush',
        'mohoexport',
        'mohoproj',
        'mohostyle',
      ],
    },
    {
      name: 'mojolicious',
      fileExtensions: ['ep', 'epl'],
    },
    {
      name: 'moleculer',
      fileNames: [
        'moleculer.config.js',
        'moleculer.config.ts',
        'moleculer.config.mjs',
        'moleculer.config.cjs',
        'moleculer.config.json',
      ],
    },
    {
      name: 'moment',
      fileNames: [
        'moment.js',
        'moment.cjs',
        'moment.mjs',
        'moment.min.js',
        'moment.min.cjs',
        'moment.min.mjs',
        'moment-with-locales.js',
        'moment-with-locales.cjs',
        'moment-with-locales.mjs',
      ],
    },
    {
      name: 'monkey',
      fileExtensions: ['monkey'],
    },
    {
      name: 'mongodb',
      fileExtensions: ['bson', 'mongo', 'mongodb'],
    },
    {
      name: 'monotone',
      fileExtensions: ['mtn', 'monotone', 'mtn-ignore'],
    },
    {
      name: 'moonscript',
      fileExtensions: ['moon'],
    },
    {
      name: 'mootools',
      fileNames: [
        'mootools.js',
        'mootools.cjs',
        'mootools.mjs',
        'mootools.min.js',
        'mootools-core.js',
        'mootools-core.cjs',
        'mootools-core.mjs',
        'mootools-nocompat.js',
        'mootools-nocompat.cjs',
        'mootools-nocompat.mjs',
        'mootools-nocompat.min.js',
      ],
    },
    {
      name: 'more',
      fileExtensions: ['more', 'msg', 'utf8'],
    },
    {
      name: 'mruby',
      fileExtensions: ['mrb'],
    },
    {
      name: 'msdos',
      fileExtensions: ['com', 'dos', 'ful', 'chk'],
    },
    {
      name: 'mson',
      fileExtensions: ['mson'],
    },
    {
      name: 'msql',
      fileExtensions: ['mdf', 'ndf', 'ldf'],
    },
    {
      name: 'mupad',
      fileExtensions: ['mu', 'mup', 'mupad', 'mupadnotebook', 'mn', 'mnb'],
    },
    {
      name: 'mustache',
      fileExtensions: [
        'mustache',
        'stache',
        'handlebars',
        'hbs',
        'hamlbars',
        'emblem',
      ],
    },
    {
      name: 'mxml',
      fileExtensions: ['mxml'],
    },
    {
      name: 'mybatis',
      fileNames: ['mybatis-config.xml', 'mybatis.xml'],
    },

    // endregion

    // region [N]
    {
      name: 'n64',
      fileExtensions: ['n64'],
    },
    {
      name: 'nant',
      fileExtensions: ['build'],
    },
    {
      name: 'nano',
      fileExtensions: ['nano', 'nanorc'],
    },
    {
      name: 'nasm',
      fileExtensions: ['nasm'],
    },
    {
      name: 'ncu',
      fileNames: [
        '.ncurc',
        '.ncurc.json',
        '.ncurc.yml',
        '.ncurc.yaml',
        '.ncurc.js',
        '.ncurc.ts',
        '.ncurc.cjs',
        '.ncurc.mjs',
      ],
    },
    {
      name: 'ndproj',
      fileExtensions: ['ndproj'],
    },
    {
      name: 'nearley',
      fileExtensions: ['ne'],
    },
    {
      name: 'neko',
      fileExtensions: ['n', 'neko'],
    },
    {
      name: 'neo4j',
      fileExtensions: ['cyp', 'cypher'],
    },
    {
      name: 'neon',
      fileExtensions: ['neon'],
      light: true,
    },
    {
      name: 'nessus',
      fileExtensions: ['nasl'],
    },
    {
      name: 'nestland',
      fileNames: ['egg.json', 'egg.yaml', 'egg.yml'],
    },
    {
      name: 'nest',
      fileNames: ['.nest-cli.json', 'nest-cli.json'],
    },
    {
      name: 'nestconfig',
      fileNames: ['.nestconfig.json', 'nestconfig.json'],
    },
    {
      name: 'nestadapter',
      fileExtensions: ['adapter.ts', 'adapter.js'],
      enabledFor: [IconPack.Nest],
    },
    {
      name: 'nestcontroller',
      fileExtensions: ['controller.ts', 'controller.js'],
      enabledFor: [IconPack.Nest],
    },
    {
      name: 'nestdecorator',
      fileExtensions: ['decorator.ts', 'decorator.js'],
      enabledFor: [IconPack.Nest],
    },
    {
      name: 'nestdto',
      fileExtensions: ['dto.ts', 'dto.js'],
      enabledFor: [IconPack.Nest],
    },
    {
      name: 'nestfilter',
      fileExtensions: ['filter.ts', 'filter.js'],
      enabledFor: [IconPack.Nest],
    },
    {
      name: 'nestgateway',
      fileExtensions: ['gateway.ts', 'gateway.js'],
      enabledFor: [IconPack.Nest],
    },
    {
      name: 'nestguard',
      fileExtensions: ['guard.ts', 'guard.js'],
      enabledFor: [IconPack.Nest],
    },
    {
      name: 'nestinterceptor',
      fileExtensions: ['interceptor.ts', 'interceptor.js'],
      enabledFor: [IconPack.Nest],
    },
    {
      name: 'nestmiddleware',
      fileExtensions: ['middleware.ts', 'middleware.js'],
      enabledFor: [IconPack.Nest],
    },
    {
      name: 'nestmodule',
      fileExtensions: ['module.ts', 'module.js'],
      enabledFor: [IconPack.Nest],
    },
    {
      name: 'nestpipe',
      fileExtensions: ['pipe.ts', 'pipe.js'],
      enabledFor: [IconPack.Nest],
    },
    {
      name: 'nestprovider',
      fileExtensions: ['provider.ts', 'provider.js'],
      enabledFor: [IconPack.Nest],
    },
    {
      name: 'nestschema',
      fileExtensions: ['schema.ts', 'schema.js'],
      enabledFor: [IconPack.Nest],
    },
    {
      name: 'nestrepository',
      fileExtensions: ['repository.ts', 'repository.js'],
      enabledFor: [IconPack.Nest],
    },
    {
      name: 'nestservice',
      fileExtensions: ['service.ts', 'service.js'],
      enabledFor: [IconPack.Nest],
    },
    {
      name: 'neststrategy',
      fileExtensions: ['strategy.ts', 'strategy.js'],
      enabledFor: [IconPack.Nest],
    },
    {
      name: 'netlify',
      fileNames: ['netlify.toml'],
    },
    {
      name: 'netlify_headers',
      fileNames: ['_headers'],
    },
    {
      name: 'netlify_redirects',
      fileNames: ['_redirects'],
    },
    {
      name: 'netlinx',
      fileExtensions: ['axs', 'axi'],
    },
    {
      name: 'netlogo',
      fileExtensions: ['nlogo'],
    },
    {
      name: 'newrelic',
      fileNames: ['newrelic.yml', 'newrelic.yaml'],
    },
    {
      name: 'nextflow',
      fileExtensions: ['nf', 'nextflow'],
    },
    {
      name: 'nextflowconfig',
      fileNames: [
        'nextflow.config.js',
        'nextflow.config.cjs',
        'nextflow.config.mjs',
      ],
    },
    {
      name: 'nextjs',
      fileNames: ['next.config.js', 'next.config.cjs', 'next.config.mjs'],
    },
    {
      name: 'ngrx-actions',
      fileExtensions: [
        'action.ts',
        'action.js',
        'action.tsx',
        'action.jsx',
        'actions.ts',
        'actions.js',
        'actions.tsx',
        'actions.jsx',
      ],
      enabledFor: [IconPack.Ngrx],
    },
    {
      name: 'ngrx-effects',
      fileExtensions: [
        'effects.ts',
        'effects.js',
        'effects.tsx',
        'effects.jsx',
        'effect.ts',
        'effect.js',
        'effect.tsx',
        'effect.jsx',
      ],
      enabledFor: [IconPack.Ngrx],
    },
    {
      name: 'ngrx-entities',
      fileExtensions: [
        'entity.ts',
        'entity.js',
        'entity.tsx',
        'entity.jsx',
        'entities.ts',
        'entities.js',
        'entities.tsx',
        'entities.jsx',
      ],
      enabledFor: [IconPack.Ngrx],
    },
    {
      name: 'ngrx-reducers',
      fileExtensions: [
        'reducer.ts',
        'reducer.js',
        'reducer.tsx',
        'reducer.jsx',
        'reducers.ts',
        'reducers.js',
        'reducers.tsx',
        'reducers.jsx',
      ],
      enabledFor: [IconPack.Ngrx],
    },
    {
      name: 'ngrx-repo',
      fileExtensions: [
        'repo.ts',
        'repo.js',
        'repo.tsx',
        'repo.jsx',
        'repos.ts',
        'repos.js',
        'repos.tsx',
        'repos.jsx',
        'repository.ts',
        'repository.js',
        'repository.tsx',
        'repository.jsx',
        'repositories.ts',
        'repositories.js',
        'repositories.tsx',
        'repositories.jsx',
      ],
      enabledFor: [IconPack.Ngrx],
    },
    {
      name: 'ngrx-state',
      fileExtensions: [
        'state.ts',
        'state.js',
        'state.tsx',
        'state.jsx',
        'states.ts',
        'states.js',
        'states.tsx',
        'states.jsx',
      ],
      enabledFor: [IconPack.Ngrx],
    },
    {
      name: 'ngrx-selectors',
      fileExtensions: [
        'selector.ts',
        'selector.js',
        'selector.tsx',
        'selector.jsx',
        'selectors.ts',
        'selectors.js',
        'selectors.tsx',
        'selectors.jsx',
      ],
      enabledFor: [IconPack.Ngrx],
    },
    {
      name: 'nib',
      fileExtensions: ['nib'],
    },
    {
      name: 'nickle',
      fileExtensions: ['5c'],
    },
    {
      name: 'nightwatch',
      fileNames: [
        'nightwatch.conf.js',
        'nightwatch.conf.cjs',
        'nightwatch.conf.mjs',
        'nightwatch.config.js',
        'nightwatch.config.cjs',
        'nightwatch.config.mjs',
        'nightwatch.json',
      ],
    },
    {
      name: 'nimble',
      fileExtensions: ['nimble'],
    },
    {
      name: 'nimrod',
      fileExtensions: ['nim', 'nimrod'],
    },
    {
      name: 'nit',
      fileExtensions: ['nit'],
    },
    {
      name: 'shuriken',
      fileExtensions: ['ninja', 'ninja.d'],
    },
    {
      name: 'nix',
      fileExtensions: ['nix'],
    },
    {
      name: 'nmap',
      fileExtensions: ['nmap', 'nse'],
    },
    {
      name: 'noc',
      fileExtensions: ['noc'],
    },
    {
      name: 'nodejs',
      fileNames: [
        'server.js',
        'server.cjs',
        'server.mjs',
        'server.ts',
        'app.js',
        'app.cjs',
        'app.mjs',
        'app.ts',
        'main.js',
        'main.cjs',
        'main.mjs',
        'main.ts',
      ],
    },
    {
      name: 'nodeversion',
      fileExtensions: ['node', 'njs'],
      fileNames: ['.node-version'],
    },
    {
      name: 'nodemon',
      fileNames: ['nodemon.json', '.nodemon.json'],
    },
    {
      name: 'nodemonignore',
      fileNames: ['.nodemonignore'],
    },
    {
      name: 'nokogiri',
      fileNames: ['.nokogiri', '.nokogirirc'],
    },
    {
      name: 'nomad',
      fileExtensions: ['nomad', 'hcl'],
    },
    {
      name: 'noon',
      fileExtensions: ['noon'],
    },
    {
      name: 'normalize',
      fileNames: [
        'normalize.css',
        'normalize.scss',
        'normalize.sass',
        'normalize.less',
        'normalize.styl',
        'normalize.stylus',
        'normalize.postcss',
        'normalize-min.css',
        'normalize-min.scss',
        'normalize-min.sass',
        'normalize-min.less',
        'normalize-min.styl',
        'normalize-min.stylus',
        'normalize-min.postcss',
      ],
    },
    {
      name: 'note',
      fileExtensions: ['scratch', 'note', 'notes'],
    },
    {
      name: 'now',
      fileNames: ['now.json'],
    },
    {
      name: 'nowignore',
      fileNames: ['.nowignore'],
    },
    {
      name: 'npm',
      fileNames: ['package.json', '.npmrc'],
    },
    {
      name: 'npmignore',
      fileNames: ['.npmignore'],
    },
    {
      name: 'npmlock',
      fileNames: ['package-lock.json'],
    },
    {
      name: 'npmshrinkwrap',
      fileNames: ['npm-shrinkwrap.json'],
    },
    {
      name: 'nsis',
      fileExtensions: ['nsi', 'nsh', 'nsis'],
    },
    {
      name: 'nsri',
      fileNames: [
        '.nsrirc',
        '.integrityrc',
        '.nsrirc.json',
        '.nsrirc.config.js',
        '.nsrirc.config.yaml',
        '.nsrirc.config.yml',
        '.nsrirc.config.cjs',
        '.nsrirc.config.mjs',
        '.integrity.json',
        '.integrity.config.js',
        '.integrity.config.yaml',
        '.integrity.config.yml',
        '.integrity.config.cjs',
        '.integrity.config.mjs',
      ],
    },
    {
      name: 'nsriignore',
      fileNames: ['.nsriignore'],
    },
    {
      name: 'nu',
      fileExtensions: ['nu'],
      fileNames: ['Nukefile'],
    },
    {
      name: 'numpy',
      fileExtensions: ['npy', 'npz', 'numpy', 'numpyw', 'numsc'],
    },
    {
      name: 'nuclide',
      fileExtensions: ['nuclide', 'nuc'],
    },
    {
      name: 'numpy',
      fileExtensions: ['npy', 'npz', 'numpy', 'numpyw', 'numsc'],
    },
    {
      name: 'nuget',
      fileExtensions: ['nupkg', 'nuspec', 'snupkg', 'psmdcp'],
    },
    {
      name: 'nugetconfig',
      fileNames: ['nuget.config'],
    },
    {
      name: 'nunjucks',
      fileExtensions: ['njk', 'nunjucks', 'nunj'],
    },
    {
      name: 'nuxt',
      fileNames: [
        'nuxt.config.js',
        'nuxt.config.ts',
        'nuxt.config.cjs',
        'nuxt.config.mjs',
      ],
    },
    {
      name: 'nvm',
      fileExtensions: ['nvmrc', 'esmrc'],
      fileNames: ['.nvmrc', '.esmrc'],
    },
    {
      name: 'nwscript',
      fileExtensions: ['nss', 'ncs', 'ndb'],
    },
    {
      name: 'nx',
      fileNames: ['nx.json', 'workspace.json', 'project.json'],
      light: true,
    },
    {
      name: 'nxc',
      fileExtensions: ['nxc'],
    },

    // endregion [N]

    // region [S]
    {
      name: 'sac',
      fileExtensions: ['sac'],
    },
    {
      name: 'safari',
      fileExtensions: [
        'safariextz',
        'safariext',
        'binarycookies',
        'webarchive',
      ],
    },
    {
      name: 'sage',
      fileExtensions: ['sage', 'sagews'],
    },
    {
      name: 'sails',
      fileNames: ['.sailsrc'],
    },
    {
      name: 'saltstack',
      fileExtensions: ['sls'],
    },
    {
      name: 'san',
      fileExtensions: ['san'],
    },
    {
      name: 'sandbox',
      fileExtensions: ['sb'],
    },
    {
      name: 'sas',
      fileExtensions: ['sas'],
    },
    {
      name: 'sapper',
      fileNames: [
        'sapper.js',
        'sapper.ts',
        'sapper.cjs',
        'sapper.mjs',
        'sapper.config.js',
        'sapper.config.ts',
        'sapper.config.cjs',
        'sapper.config.mjs',
      ],
    },
    {
      name: 'sbt',
      fileExtensions: ['sbt'],
    },
    {
      name: 'scala',
      fileExtensions: ['kojo', 'sc'],
    },
    {
      name: 'scheme',
      fileExtensions: ['scm', 'scheme', 'sch', 'sps', 'sld', 'xtm'],
    },
    {
      name: 'scilla',
      fileExtensions: ['scilla'],
    },
    {
      name: 'scilab',
      fileExtensions: ['sci', 'sce', 'tst'],
    },
    {
      name: 'scratch',
      fileExtensions: ['sb2', 'sb3'],
    },
    {
      name: 'scrutinizer',
      fileNames: ['.scrutinizer.yml', '.scrutinizer.yaml'],
    },
    {
      name: 'sdlang',
      fileExtensions: ['sdl'],
    },
    {
      name: 'secret',
      fileExtensions: ['secret', 'secrets', 'safe'],
    },
    {
      name: 'self',
      fileExtensions: ['self'],
    },
    {
      name: 'sencha',
      fileNames: [
        'sencha.js',
        'sencha.cjs',
        'sencha.mjs',
        'sencha.min.js',
        'sencha.min.cjs',
        'sencha.min.mjs',
        'sencha-touch.js',
        'sencha-touch.min.js',
      ],
    },
    {
      name: 'sentry',
      fileNames: ['.sentryclirc'],
    },
    {
      name: 'semantic-release',
      fileNames: [
        '.releaserc',
        '.releaserc.json',
        '.releaserc.yaml',
        '.releaserc.yml',
        '.releaserc.js',
        '.releaserc.cjs',
        '.releaserc.mjs',
        'release.config.js',
        'release.config.cjs',
        'release.config.mjs',
        'semantic-release.config.js',
        'semantic-release.config.cjs',
        'semantic-release.config.mjs',
      ],
    },
    {
      name: 'semgrep',
      fileExtensions: ['semgrep', 'semgrepignore'],
    },
    {
      name: 'serverless',
      fileNames: [
        '.serverless.yml',
        '.serverless.yaml',
        '.serverless.json',
        '.serverless.js',
        '.serverless.ts',
        '.serverless.cjs',
        '.serverless.mjs',
        'serverless.yml',
        'serverless.yaml',
        'serverless.json',
        'serverless.js',
        'serverless.ts',
        'serverless.cjs',
        'serverless.mjs',
      ],
    },
    {
      name: 'servicefabric',
      fileExtensions: ['sfproj'],
    },
    {
      name: 'settings',
      fileExtensions: [
        'settings',
        'setting',
        'options',
        'option',
        'opt',
        'opts',
      ],
    },
    {
      name: 'sequelize',
      fileNames: [
        '.sequelizerc',
        '.sequelizerc.js',
        '.sequelizerc.cjs',
        '.sequelizerc.mjs',
        '.sequelizerc.json',
      ],
    },
    {
      name: 'shadowcljs',
      fileNames: ['shadow-cljs.edn'],
    },
    {
      name: 'shen',
      fileExtensions: ['shen'],
    },
    {
      name: 'shellcheck',
      fileNames: ['.shellcheckrc', 'shellcheckrc'],
    },
    {
      name: 'shell',
      fileNames: [
        '.bash_profile',
        '.bashrc',
        '.bash_aliases',
        '.bash_functions',
        '.zshrc',
        '.zshenv',
        '.zprofile',
        '.fishrc',
        '.tcshrc',
        '.cshrc',
        '.kshrc',
      ],
      fileExtensions: [
        'bash',
        'zsh',
        'fish',
        'ksh',
        'csh',
        'tcsh',
        'ash',
        'dash',
        'scsh',
        'mksh',
        'elvish',
        'ion',
        'nu',
        'oksh',
        'osh',
        'shar',
        'xiki',
        'xonsh',
        'yash',
      ],
    },
    {
      name: 'history',
      fileExtensions: [
        'bash_history',
        'zsh_history',
        'fish_history',
        'ksh_history',
        'csh_history',
        'tcsh_history',
        'irb-history',
        'lesshst',
      ],
    },
    {
      name: 'shipit',
      fileNames: [
        'shipitfile.js',
        'shipitfile.cjs',
        'shipitfile.mjs',
        'shipitfile.babel.js',
        'shipitfile.ts',
      ],
    },
    {
      name: 'shippable',
      fileNames: ['shippable.yml', 'shippable.yaml'],
    },
    {
      name: 'sigils',
      fileExtensions: ['sigils'],
    },
    {
      name: 'silverstripe',
      fileExtensions: ['ss'],
    },
    {
      name: 'siyuan',
      fileExtensions: ['siyuan', 'sy'],
    },
    {
      name: 'sketch',
      fileExtensions: ['sketch'],
    },
    {
      name: 'sketchup',
      fileExtensions: ['layout', 'sketchup', 'skm', 'skd', 'sketchupproj'],
    },
    {
      name: 'sketchmake',
      fileExtensions: ['skp', 'style'],
    },
    {
      name: 'skipper',
      fileExtensions: ['eskip'],
    },
    {
      name: 'skript',
      fileExtensions: ['sk', 'skript'],
      light: true,
    },
    {
      name: 'slang',
      fileExtensions: ['slang'],
    },
    {
      name: 'slash',
      fileExtensions: ['slash', 'sl'],
    },
    {
      name: 'slice',
      fileExtensions: ['ice'],
    },
    {
      name: 'slim',
      fileExtensions: ['slim'],
    },
    {
      name: 'slug',
      fileNames: [
        'slugignore',
        'slugs/js',
        'slugs/jsx',
        'slugs/ts',
        'slugs/tsx',
        'slugs/php',
        '[slug].js',
        '[slug].jsx',
        '[slug].ts',
        '[slug].tsx',
        '[slug].php',
      ],
    },
    {
      name: 'smartos',
      fileNames: ['smartos.iso', 'smartos.img', 'smartos.deb'],
    },
    {
      name: 'smarty',
      fileExtensions: ['tpl', 'smarty'],
    },
    {
      name: 'smithy',
      fileExtensions: ['smithy'],
    },
    {
      name: 'sml',
      fileExtensions: ['mlb', 'mlton', 'sml', 'sig', 'fun', 'cm', 'grm'],
    },
    {
      name: 'snakemake',
      fileExtensions: ['smk', 'rule', 'rules', 'bam'],
    },
    {
      name: 'snakefile',
      fileNames: ['Snakefile', 'snakefile'],
    },
    {
      name: 'snapcraft',
      fileNames: ['snapcraft.yaml', 'snapcraft.yml'],
    },
    {
      name: 'snapsvg',
      fileNames: [
        'snap.svg.js',
        'snap.svg.cjs',
        'snap.svg.mjs',
        'snap.svg-min.js',
        'snap.svg.min.js',
      ],
    },
    {
      name: 'snapshot',
      fileExtensions: ['snap'],
    },
    {
      name: 'snort',
      fileExtensions: ['snort'],
    },
    {
      name: 'snowpack',
      fileNames: [
        'snowpack.config.js',
        'snowpack.config.ts',
        'snowpack.config.cjs',
        'snowpack.config.mjs',
        'snowpack.config.json',
        'snowpack.config.yaml',
        'snowpack.config.yml',
      ],
    },
    {
      name: 'snyk',
      fileExtensions: ['snyk'],
    },
    {
      name: 'solidity',
      fileExtensions: ['sol', 'solidity'],
    },
    {
      name: 'solidarity',
      fileNames: ['.solidarity', '.solidarity.json'],
    },
    {
      name: 'sonar',
      fileExtensions: [
        'sonar',
        'sonarqube',
        'sonarlint',
        'sonarlintignore',
        'sonarrc',
      ],
    },
    {
      name: 'sonarcloud',
      fileNames: [
        'sonar-project.properties',
        'sonar-project.json',
        'sonar-project.yml',
        'sonar-project.yaml',
        'sonarcloud.properties',
        'sonarcloud.json',
        'sonarcloud.yml',
        'sonarcloud.yaml',
      ],
    },
    {
      name: 'sophia',
      fileExtensions: ['aesl', 'aes'],
    },
    {
      name: 'sorbet',
      fileExtensions: ['rbi'],
    },
    {
      name: 'sourcemap',
      fileExtensions: [
        'map',
        'mapping',
        'enigma',
        'cidmap',
        'tiny',
        'tinyv2',
        'match',
      ],
    },
    {
      name: 'spaceengine',
      fileExtensions: ['spe'],
    },
    {
      name: 'spacemacs',
      fileNames: ['.spacemacs', 'spacemacs'],
    },
    {
      name: 'sparql',
      fileExtensions: ['rq', 'sparql'],
    },
    {
      name: 'spectral',
      fileNames: ['.spectral.yml', '.spectral.yaml'],
    },
    {
      name: 'spring',
      fileExtensions: ['spring'],
    },
    {
      name: 'sqf',
      fileExtensions: ['sqf', 'hqf'],
    },
    {
      name: 'sql',
      fileExtensions: [
        'pdb',
        'pgsql',
        'mysql',
        'hql',
        'qml',
        'psql',
        'pkb',
        'xql',
        'xqm',
        'xqy',
        'cql',
        'prc',
        'viw',
      ],
    },
    {
      name: 'sqlite',
      fileExtensions: ['sqlite', 'sqlite3', 'db', 'db3', 'sqlite3-journal'],
    },
    {
      name: 'squarespace',
      fileExtensions: ['jsont'],
    },
    {
      name: 'squirrel',
      fileExtensions: ['nut', 'nutf', 'gnut'],
    },
    {
      name: 'stan',
      fileExtensions: ['stan'],
    },
    {
      name: 'stata',
      fileExtensions: [
        'stata',
        'do',
        'ado',
        'doh',
        'ihlp',
        'mata',
        'matah',
        'sthlp',
      ],
    },
    {
      name: 'stdlib',
      fileNames: [
        'stdlib.js',
        'stdlib.min.js',
        'stdlib.mjs',
        'stdlib.cjs',
        'stdlib.conf.js',
      ],
    },
    {
      name: 'stencilconfig',
      fileNames: ['stencil.config.js', 'stencil.config.ts'],
    },
    {
      name: 'stencil',
      fileExtensions: ['stencil'],
    },
    {
      name: 'steadybit',
      fileNames: [
        'steadybit.yml',
        'steadybit.yaml',
        '.steadybit.yml',
        '.steadybit.yaml',
      ],
    },
    {
      name: 'stitches',
      fileNames: [
        'stitches.config.js',
        'stitches.config.ts',
        'stitches.config.cjs',
        'stitches.config.mjs',
      ],
    },
    {
      name: 'storyboard',
      fileExtensions: ['storyboard'],
    },
    {
      name: 'storyist',
      fileExtensions: ['story'],
    },
    {
      name: 'storybook',
      fileExtensions: [
        'stories.js',
        'stories.jsx',
        'stories.ts',
        'stories.tsx',
        'stories.mdx',
        'story.js',
        'story.jsx',
        'story.ts',
        'story.tsx',
        'story.mdx',
      ],
    },
    {
      name: 'stylelint',
      fileNames: [
        '.stylelintrc',
        '.stylelintrc.json',
        '.stylelintrc.yaml',
        '.stylelintrc.yml',
        '.stylelintrc.js',
        '.stylelintrc.cjs',
        '.stylelintrc.mjs',
        'stylelint.config.js',
        'stylelint.config.ts',
        'stylelint.config.cjs',
        'stylelint.config.mjs',
        'stylelint.config.json',
        'stylelint.config.yaml',
        'stylelint.config.yml',
      ],
    },
    {
      name: 'stylelintignore',
      fileNames: ['.stylelintignore', '.stylelintignore.json'],
    },
    {
      name: 'styleguidist',
      fileNames: [
        'styleguide.config.js',
        'styleguide.config.ts',
        'styleguide.config.cjs',
        'styleguide.config.mjs',
        'styleguide.config.json',
        'styleguide.config.yaml',
        'styleguide.config.yml',
        '.styleguiderc',
        '.styleguiderc.json',
        '.styleguiderc.yaml',
        '.styleguiderc.yml',
        '.styleguiderc.js',
        '.styleguiderc.cjs',
        '.styleguiderc.mjs',
      ],
    },
    {
      name: 'stylable',
      fileExtensions: ['st.css'],
    },
    {
      name: 'styledcomponents',
      fileExtensions: [
        'styled',
        'styled.js',
        'styled.cjs',
        'styled.mjs',
        'styled.jsx',
        'styled.ts',
        'styled.tsx',
        'styled.mdx',
        'styles.ts',
        'styles.js',
        'styles.cjs',
        'styles.mjs',
        'styles.jsx',
        'styles.tsx',
        'styles.mdx',
        'sc.ts',
        'sc.js',
        'sc.cjs',
        'sc.mjs',
        'sc.jsx',
        'sc.tsx',
        'sc.mdx',
      ],
    },
    {
      name: 'stylishhaskell',
      fileNames: ['.stylish-haskell.yaml', '.stylish-haskell.yml'],
    },
    {
      name: 'stylus',
      fileExtensions: ['styl'],
    },
    {
      name: 'sublime',
      fileExtensions: [
        'sublime-project',
        'sublime-workspace',
        'sublime-package',
        'sublime-macro',
      ],
    },
    {
      name: 'subtitle',
      fileExtensions: ['sub', 'sbv', 'srt', 'vtt'],
    },
    {
      name: 'scd',
      fileExtensions: [
        'sc',
        'scd',
        'scsyndef',
        'scsynthdef',
        'scx',
        'scxt',
        'scz',
      ],
    },
    {
      name: 'sss',
      fileExtensions: ['sss'],
    },
    {
      name: 'supabase',
      fileNames: [
        'supabase.json',
        'supabase.yml',
        'supabase.yaml',
        'supabase.py',
        'supabase.js',
        'supabase.ts',
      ],
    },
    {
      name: 'svelte',
      fileExtensions: ['svelte', 'svelte-kit'],
    },
    {
      name: 'svelte_config',
      fileNames: [
        'svelte.config.js',
        'svelte.config.ts',
        'svelte.config.cjs',
        'svelte.config.mjs',
        'svelte.config.json',
        'svelte.config.yaml',
        'svelte.config.yml',
      ],
    },
    {
      name: 'svgo',
      fileNames: [
        '.svgo.yml',
        '.svgo.yaml',
        '.svgo.json',
        '.svgo.js',
        '.svgo.cjs',
        '.svgo.mjs',
        'svgo.config.js',
        'svgo.config.ts',
        'svgo.config.cjs',
        'svgo.config.mjs',
        'svgo.config.json',
        'svgo.config.yaml',
        'svgo.config.yml',
      ],
    },
    {
      name: 'svgr',
      fileNames: [
        '.svgrrc',
        'svgr.config.js',
        'svgr.config.ts',
        'svgr.config.cjs',
        'svgr.config.mjs',
        'svgr.config.json',
        'svgr.config.yaml',
        'svgr.config.yml',
      ],
    },
    {
      name: 'svx',
      fileExtensions: ['svx', 'mdsvex'],
    },
    {
      name: 'svn',
      fileExtensions: ['svn', 'svnignore'],
    },
    {
      name: 'swagger',
      fileNames: [
        'swagger.json',
        'swagger.yaml',
        'swagger.yml',
        'api.yml',
        'api.yaml',
        'api.json',
      ],
      fileExtensions: ['swagger', 'swag'],
    },
    {
      name: 'swc',
      fileExtensions: ['swc'],
    },
    {
      name: 'swiftlock',
      fileNames: [
        'package.pins',
        'package.resolved',
        'Package.resolved',
        'Package.pins',
      ],
    },
    {
      name: 'swig',
      fileExtensions: ['swig'],
    },
    {
      name: 'symfony',
      fileNames: ['symfony.lock'],
      light: true,
    },

    // endregion

    // region [T]
    {
      name: 'toc',
      fileExtensions: ['toc', 'listing'],
    },
    {
      name: 'version',
      fileNames: [
        'version',
        'version.txt',
        'version.md',
        'version.rst',
        'version.adoc',
        'ctags',
        'tag',
        'tags',
        'gemtags',
        'hgtags',
        'idtags',
        'pytags',
        'localtags',
      ],
      fileExtensions: [
        'ctags',
        'tag',
        'tags',
        'gemtags',
        'hgtags',
        'idtags',
        'pytags',
        'localtags',
        'pid',
        'tld',
        'version',
        'sha',
        'sha256',
        'shasum',
      ],
    },
    {
      name: 'tailwindcss',
      fileExtensions: [
        'tailwind.js',
        'tailwind.ts',
        'tailwind.cjs',
        'tailwind.mjs',
      ],
      fileNames: [
        'tailwind.js',
        'tailwind.conf.js',
        'tailwind.conf.ts',
        'tailwind.conf.cjs',
        'tailwind.conf.mjs',
        'tailwind.config.js',
        'tailwind.config.ts',
        'tailwind.config.cjs',
        'tailwind.config.mjs',
      ],
    },
    {
      name: 'tauri',
      fileNames: [
        'tauri.conf.json',
        'tauri.conf.js',
        'tauri.conf.ts',
        'tauri.conf.cjs',
        'tauri.conf.mjs',
        'tauri.js',
        'tauri.ts',
        'tauri.cjs',
        'tauri.mjs',
        'tauri.config.js',
        'tauri.config.ts',
        'tauri.config.cjs',
        'tauri.config.mjs',
      ],
    },
    {
      name: 'tcl',
      fileExtensions: [
        'tcl',
        'adp',
        'tm',
        'itcl',
        'itk',
        'exp',
        'tkvcs',
        'tkdiffrc',
      ],
    },
    {
      name: 'tea',
      fileExtensions: ['tea'],
    },
    {
      name: 'teal',
      fileExtensions: ['teal'],
    },
    {
      name: 'telegram',
      fileExtensions: ['tl', 'xps'],
    },
    {
      name: 'tt',
      fileExtensions: ['tt', 'tt2', 'tt3', 'tt4', 'ttml'],
    },
    {
      name: 'tera',
      fileExtensions: ['tera'],
    },
    {
      name: 'terraform',
      fileExtensions: [
        'tf',
        'tfvars',
        'tfstate',
        'tfplan',
        'tfignore',
        'tf.json',
      ],
    },
    {
      name: 'terser',
      fileExtensions: [
        'terserrc',
        'terserrc.conf',
        'terserignore',
        'uglifyrc',
        'uglifyignore',
        'terserrc.json',
        'uglifyrc.json',
      ],
    },
    {
      name: 'tern',
      fileExtensions: ['tern-project', 'tern-config', 'ternconfig'],
    },
    {
      name: 'testcafe',
      fileExtensions: ['testcaferc', 'testcaferc.json'],
    },
    {
      name: 'tex',
      fileExtensions: [
        'tex',
        'aux',
        'ltx',
        'sty',
        'dtx',
        'lbx',
        'cbx',
        'mkiv',
        'mkvi',
        'mkii',
        'pgf',
        'tikz',
        'txi',
        'texi',
      ],
    },
    {
      name: 'textlint',
      fileExtensions: ['textlintrc', 'textlintrc.json'],
    },
    {
      name: 'textile',
      fileExtensions: ['textile'],
    },
    {
      name: 'textmate',
      fileExtensions: [
        'tmLanguage',
        'tmTheme',
        'tmPreferences',
        'tmProperties',
        'tmSnippet',
        'tmCommand',
        'tmMacro',
        'tmBundle',
        'tmcg',
      ],
    },
    {
      name: 'thor',
      fileExtensions: ['thor'],
    },
    {
      name: 'thunderclient',
      fileNames: [
        'thunderclient.settings.json',
        'thunderclient.settings.js',
        'thunderclient.json',
        'thunderclient.js',
        'thunder-tests.json',
        'thunder-tests.js',
        'thunder-collection.js',
        'thunder-collection.json',
        'thunder-collection_Web.json',
      ],
    },
    {
      name: 'tidyparse',
      fileExtensions: ['tidyparserrc', 'tidyparserrc.json', 'tidy'],
    },
    {
      name: 'tilt',
      fileNames: ['Tiltfile'],
    },
    {
      name: 'tinymce',
      fileNames: [
        'tinymce.js',
        'tinymce.min.js',
        'tinymce.jquery.js',
        'tinymce.jquery.min.js',
        'tinymce.cjs',
        'tinymce.min.cjs',
        'tinymce.mjs',
        'tinymce.min.mjs',
        'tinymce.ts',
      ],
    },
    {
      name: 'tipe',
      fileExtensions: ['tipe'],
    },
    {
      name: 'tla',
      fileExtensions: ['tla'],
    },
    {
      name: 'tmux',
      fileNames: ['tmux.conf'],
      fileExtensions: ['tmux', 'tmux.conf'],
    },
    {
      name: 'truffle',
      fileNames: [
        'truffle.js',
        'truffle.cjs',
        'truffle.mjs',
        'truffle.ts',
        'truffle-config.js',
        'truffle-config.ts',
        'truffle-config.cjs',
        'truffle-config.mjs',
      ],
      fileExtensions: [
        'truffle.js',
        'truffle.cjs',
        'truffle.mjs',
        'truffle.ts',
      ],
    },
    {
      name: 'ttcn',
      fileExtensions: ['ttcn', 'ttcn3'],
    },
    {
      name: 'tomcat',
      fileNames: [
        'server.xml',
        'web.xml',
        'context.xml',
        'tomcat-users.xml',
        'tomcat.conf',
        'tomcat.java',
      ],
    },
    {
      name: 'todo',
      fileNames: ['todo', 'todo.txt', 'todo.md', 'todo.rst', 'todo.adoc'],
      fileExtensions: ['todo', 'taskpaper'],
    },
    {
      name: 'toit',
      fileExtensions: ['toit'],
    },
    {
      name: 'tox',
      fileNames: ['tox.ini'],
    },
    {
      name: 'tsconfig',
      fileNames: [
        'tsconfig.json',
        'tsconfig.base.json',
        'tsconfig.build.json',
        'tsconfig.spec.json',
        'tsconfig.lib.json',
        'tsconfig.eslint.json',
        'tsconfig.js',
        'tsconfig.cjs',
        'tsconfig.mjs',
        'tsconfig.ts',
        'tsconfig.yml',
        'tsconfig.yaml',
      ],
      fileExtensions: [
        'tsconfig.js',
        'tsconfig.cjs',
        'tsconfig.mjs',
        'tsconfig.ts',
        'tsconfig.json',
        'tsconfig.yml',
        'tsconfig.yaml',
      ],
    },
    {
      name: 'tslint',
      fileNames: [
        'tslint.json',
        'tslint.base.json',
        'tslint.build.json',
        'tslint.spec.json',
        'tslint.lib.json',
        'tslint.eslint.json',
        'tslint.js',
        'tslint.cjs',
        'tslint.mjs',
        'tslint.ts',
        'tslint.yml',
        'tslint.yaml',
      ],
      fileExtensions: [
        'tslint.js',
        'tslint.cjs',
        'tslint.mjs',
        'tslint.ts',
        'tslint.json',
        'tslint.yml',
        'tslint.yaml',
      ],
    },
    {
      name: 'travis',
      fileExtensions: ['travis.yml', 'travis.yaml'],
    },
    {
      name: 'tuc',
      fileExtensions: ['tuc'],
    },
    {
      name: 'turborepo',
      fileNames: ['turbo.config.js', 'turbo.config.ts', 'turbo.json'],
    },
    {
      name: 'turing',
      fileExtensions: ['tu'],
    },
    {
      name: 'twig',
      fileExtensions: ['twig'],
    },
    {
      name: 'twine',
      fileExtensions: ['tw', 'twee'],
    },
    {
      name: 'txl',
      fileExtensions: ['txl'],
    },
    {
      name: 'typedoc',
      fileNames: [
        'typedoc.json',
        'typedoc.js',
        'typedoc.ts',
        'typedoc.cjs',
        'typedoc.mjs',
      ],
    },
    {
      name: 'dts',
      fileExtensions: ['d.ts'],
    },
    {
      name: 'typings',
      fileNames: ['typings.json'],
    },
    {
      name: 'typo3',
      fileExtensions: ['typoscript'],
    },

    // endregion

    // region [U]
    {
      name: 'ufo',
      fileExtensions: ['ufo', 'ufoz', 'glif'],
    },
    {
      name: 'uikit',
      fileNames: [
        'uikit.js',
        'uikit.min.js',
        'uikit.cjs',
        'uikit.min.cjs',
        'uikit.mjs',
        'uikit.min.mjs',
      ],
    },
    {
      name: 'uml',
      fileExtensions: ['uml', 'iuml', 'puml', 'pu', 'plantuml', 'wsd'],
    },
    {
      name: 'unicode',
      fileExtensions: ['ldml', 'unicode'],
    },
    {
      name: 'unibeautify',
      fileNames: [
        'unibeautify.config.js',
        'unibeautify.config.cjs',
        'unibeautify.config.mjs',
        'unibeautify.config.ts',
        'unibeautify.config.yaml',
        'unibeautify.config.yml',
        'unibeautify.config.json',
      ],
    },
    {
      name: 'unibeautifyrc',
      fileNames: [
        '.unibeautifyrc',
        'unibeautifyrc.config.js',
        'unibeautifyrc.config.cjs',
        'unibeautifyrc.config.mjs',
        'unibeautifyrc.config.ts',
        'unibeautifyrc.config.yaml',
        'unibeautifyrc.config.yml',
        'unibeautifyrc.config.json',
      ],
    },
    {
      name: 'unity',
      fileExtensions: [
        'unity',
        'unitypackage',
        'unity3d',
        'unityproj',
        'u3d',
        'ply',
        'fbx',
        'anim',
        'asset',
        'mat',
        'prefab',
        'meta',
        'cubemap',
      ],
    },
    {
      name: 'uos',
      fileExtensions: ['uos', 'uof', 'uop', 'uot'],
    },
    {
      name: 'unison',
      fileExtensions: ['u'],
    },
    {
      name: 'unlicense',
      fileNames: [
        'unlicense',
        'unlicense.txt',
        'unlicense.md',
        'unlicense.rst',
        'unlicence',
        'unlicence.txt',
        'unlicence.md',
        'unlicence.rst',
      ],
    },
    {
      name: 'uno',
      fileExtensions: ['uno', 'unoproj'],
    },
    {
      name: 'unocss',
      fileNames: [
        'uno.config.js',
        'uno.config.cjs',
        'uno.config.mjs',
        'uno.config.ts',
        'unocss.config.js',
        'unocss.config.cjs',
        'unocss.config.mjs',
        'unocss.config.ts',
      ],
    },
    {
      name: 'unreal',
      fileExtensions: [
        'uplugin',
        'uproject',
        'umap',
        'uasset',
        'unr',
        'utx',
        'umx',
        'uax',
        'ukx',
        'uz',
        'upkg',
        'uc',
        'upl',
        'asc',
        'lwo',
      ],
    },
    {
      name: 'urweb',
      fileExtensions: ['ur', 'urs'],
    },

    // endregion [U]

    // region [Y]
    {
      name: 'yamllint',
      fileNames: ['.yamllint.yml', '.yamllint.yaml'],
      fileExtensions: ['yamllint'],
    },
    {
      name: 'yandex',
      fileNames: ['.yaspeller.json'],
      fileExtensions: ['yaspellerrc'],
    },
    {
      name: 'yang',
      fileExtensions: ['yang'],
    },
    {
      name: 'yara',
      fileExtensions: ['yar', 'yara'],
    },
    {
      name: 'yarn',
      fileNames: ['.yarnrc', 'yarn.json', 'yarn.js', '.yarnrc.yml'],
    },
    {
      name: 'yarnlock',
      fileNames: ['yarn.lock'],
    },
    {
      name: 'yarnclean',
      fileNames: ['.yarnclean', '.yarn-metadata', '.yarn-integrity'],
    },
    {
      name: 'yard',
      fileExtensions: ['yardopts'],
    },
    {
      name: 'yasm',
      fileExtensions: ['yasm'],
    },
    {
      name: 'yeoman',
      fileExtensions: ['yo-rc.json'],
    },
    {
      name: 'yona',
      fileExtensions: ['yona'],
    },
    {
      name: 'yorick',
      fileExtensions: ['yorick'],
    },
    {
      name: 'yue',
      fileExtensions: ['yue'],
    },
    {
      name: 'yui',
      fileNames: [
        'yui.js',
        'yui.ts',
        'yui.cjs',
        'yui.mjs',
        'yui-min.js',
        'yui.min.js',
        'yui-config.js',
        'yui-config.ts',
        'yui-config.cjs',
        'yui-config.mjs',
        'yahoo-config.js',
        'yahoo-config.ts',
        'yahoo-config.cjs',
        'yahoo-config.mjs',
      ],
    },
    {
      name: 'yvmrc',
      fileExtensions: ['yvmrc'],
    },

    // endregion

    // region [Languages]
    {
      name: 'scala',
      fileExtensions: ['scala'],
    },
    {
      name: 'shell',
      fileExtensions: ['sh'],
    },
    {
      name: 'sql',
      fileExtensions: ['sql'],
    },
    {
      name: 'swift',
      fileExtensions: ['swift'],
    },
    {
      name: 'toml',
      fileExtensions: ['toml'],
    },
    // endregion
  ],
};
